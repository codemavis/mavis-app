[{"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\index.js":"1","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\reportWebVitals.js":"2","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\App.js":"3","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Login.js":"4","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\TopBar.js":"5","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\PrivateRoute.js":"6","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\SideBar.js":"7","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Footer.js":"8","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\IdleTimerContainer.js":"9","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Reset.js":"10","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\NotFound.js":"11","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\PrintView.js":"12","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\ListView.js":"13","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Admin\\Home.js":"14","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Admin\\UserManager.js":"15","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Stock\\PurchaseOrder.js":"16","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Utils.js":"17","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Header.js":"18","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\AddSelect.js":"19","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\ModalPopup.js":"20","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\MessageBox.js":"21","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\APIs.js":"22","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Reports\\Admin\\PrtUserManager.js":"23","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\LocationSelect.js":"24","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\CurrencySelect.js":"25","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\POTypeSelect.js":"26","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\ItemSelect.js":"27","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\StateSelect.js":"28","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\DateSelect.js":"29","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\SupplierSelect.js":"30","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\GetReference.js":"31"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2454,"mtime":1611047356467,"results":"35","hashOfConfig":"33"},{"size":4237,"mtime":1610901853322,"results":"36","hashOfConfig":"33"},{"size":11629,"mtime":1609512194046,"results":"37","hashOfConfig":"33"},{"size":1045,"mtime":1610904430805,"results":"38","hashOfConfig":"33"},{"size":3816,"mtime":1610790598102,"results":"39","hashOfConfig":"33"},{"size":1446,"mtime":1610034103876,"results":"40","hashOfConfig":"33"},{"size":721,"mtime":1609509540051,"results":"41","hashOfConfig":"33"},{"size":1087,"mtime":1609567643603,"results":"42","hashOfConfig":"33"},{"size":896,"mtime":1609502653374,"results":"43","hashOfConfig":"33"},{"size":1721,"mtime":1610124181526,"results":"44","hashOfConfig":"33"},{"size":4369,"mtime":1611309927743,"results":"45","hashOfConfig":"33"},{"size":355,"mtime":1609515802750,"results":"46","hashOfConfig":"33"},{"size":36201,"mtime":1611413366354,"results":"47","hashOfConfig":"33"},{"size":40589,"mtime":1611850542953,"results":"48","hashOfConfig":"33"},{"size":7499,"mtime":1611036564756,"results":"49","hashOfConfig":"33"},{"size":745,"mtime":1609594396730,"results":"50","hashOfConfig":"33"},{"size":257,"mtime":1609689270255,"results":"51","hashOfConfig":"33"},{"size":958,"mtime":1609953755961,"results":"52","hashOfConfig":"33"},{"size":1001,"mtime":1609944922613,"results":"53","hashOfConfig":"33"},{"size":1051,"mtime":1611391900682,"results":"54","hashOfConfig":"33"},{"size":6324,"mtime":1610127558627,"results":"55","hashOfConfig":"33"},{"size":2268,"mtime":1611403839342,"results":"56","hashOfConfig":"33"},{"size":3071,"mtime":1611405163559,"results":"57","hashOfConfig":"33"},{"size":2525,"mtime":1611405910495,"results":"58","hashOfConfig":"33"},{"size":2619,"mtime":1611409720954,"results":"59","hashOfConfig":"33"},{"size":2207,"mtime":1611413299450,"results":"60","hashOfConfig":"33"},{"size":691,"mtime":1611461893744,"results":"61","hashOfConfig":"33"},{"size":2870,"mtime":1611461372239,"results":"62","hashOfConfig":"33"},{"size":768,"mtime":1611505924125,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1gngrx3",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"66"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"66"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\index.js",[],["151","152"],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\reportWebVitals.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\App.js",["153"],"import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\n\nimport SideBar from './Components/Common/SideBar';\nimport TopBar from './Components/Common/TopBar';\nimport Footer from './Components/Common/Footer';\nimport Home from './Components/Pages/Admin/Home';\nimport UserManager from './Components/Pages/Admin/UserManager';\nimport NotFound from './Components/Common/NotFound';\nimport Login from './Components/Common/Login';\nimport Reset from './Components/Common/Reset';\nimport PrivateRoute from './Components/Common/PrivateRoute';\nimport IdleTimerContainer from './Components/Common/IdleTimerContainer';\nimport ListView from './Components/Common/ListView';\nimport PrintView from './Components/Common/PrintView';\nimport PurchaseOrder from './Components/Pages/Stock/PurchaseOrder';\n\nfunction App() {\n\n  const iconList = Object.keys(Icons)\n    .filter((key) => key !== 'fas' && key !== 'prefix')\n    .map((icon) => Icons[icon]);\n\n  library.add(...iconList);\n\n  const LoginContainer = () => (\n    <div className=\"main\">\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/reset\" component={Reset} />\n    </div>\n  )\n\n  const DefaultContainer = () => (\n    <div className=\"wrapper\">\n      <IdleTimerContainer />\n      <SideBar />\n      <div className=\"main\">\n        <TopBar />\n        <Switch>\n          <Route path=\"/not-found\" exact component={NotFound} />\n          <PrivateRoute exact path='/' component={Home} />\n          <PrivateRoute exact path='/print/:path/:record/:id' component={PrintView} />\n\n          <PrivateRoute exact path='/admin/user/:id?/:mode?' component={UserManager} />\n\n\n          <PrivateRoute exact path='/purchasing/po/:id?/:mode?' component={PurchaseOrder} />\n\n          <PrivateRoute path=\"/list/:record\" component={ListView} />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n    </div>\n  )\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"splash active\">\n          <div className=\"splash-icon\"></div>\n        </div>\n        <Switch>\n          <Route path=\"/login\" exact component={LoginContainer} />\n          <Route path=\"/reset\" exact component={LoginContainer} />\n          <Route component={DefaultContainer} />\n        </Switch>\n      </div>\n\n    </Router>\n  );\n\n\n\n}\n\nexport default App;\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Login.js",["154"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { login } from './Utils';\r\nimport Avatar3 from '../../Images/avatars/avatar-3.jpg';\r\n\r\nexport default function Login() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [currUser, setCurrUser] = useState({ email: '', password: '' });\r\n\r\n    const handleChange = (e) => {\r\n        const newUser = { ...currUser };\r\n\r\n        switch (e.target.name) {\r\n            case 'email':\r\n                newUser.email = e.target.value.toLowerCase();\r\n                break;\r\n            case 'password':\r\n                newUser.password = e.target.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setCurrUser(newUser);\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(currUser);\r\n        if (await login(currUser)) {\r\n            history.push('/');\r\n            history.go(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"main h-100 w-100\">\r\n            <div className=\"container h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\r\n                        <div className=\"d-table-cell align-middle\">\r\n\r\n                            <div className=\"text-center mt-4\">\r\n                                <h1 className=\"h2 page-head2\">Welcome</h1>\r\n                                <p className=\"lead\"> Sign in to your account to continue </p>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"m-sm-4\">\r\n                                        <div className=\"text-center\">\r\n                                            <img src={Avatar3} alt=\"logo\" className=\"img-fluid rounded-circle\" width=\"132\" height=\"132\" />\r\n                                        </div>\r\n                                        <form onSubmit={onSubmit} >\r\n                                            <div className=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <input className=\"form-control form-control-lg\" type=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <input className=\"form-control form-control-lg\" type=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={handleChange} />\r\n                                                <small>\r\n                                                    <Link to=\"/reset\"> Forgot password? </Link >\r\n                                                </small>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"custom-control custom-checkbox align-items-center\">\r\n                                                    <input id=\"customControlInline\" type=\"checkbox\" className=\"custom-control-input\" value=\"remember-me\" name=\"remember-me\" />\r\n                                                    <label className=\"custom-control-label text-small\" htmlFor=\"customControlInline\">Remember me next time</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-center mt-3\">\r\n                                                <button type=\"submit\" className=\"btn btn-lg btn-primary\">Sign in</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\TopBar.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelopeOpen, faBell, faCog, faBuilding, faBellSlash, faComment, faUser, faChartPie, faCogs, faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { logout } from '../Common/Utils';\r\n\r\nexport default function TopBar() {\r\n\r\n    const history = useHistory();\r\n\r\n    const signOut = async () => {\r\n        if (await logout()) {\r\n            history.push('/');\r\n            history.go(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-theme\">\r\n            <a className=\"sidebar-toggle d-flex mr-2\">\r\n                <i className=\"hamburger align-self-center\"></i>\r\n            </a>\r\n\r\n            <form className=\"form-inline d-none d-sm-inline-block\">\r\n                <input className=\"form-control form-control-lite\" type=\"text\" placeholder=\"Search projects...\" />\r\n            </form>\r\n\r\n            <div className=\"navbar-collapse collapse\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item dropdown active\">\r\n                        <a className=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"messagesDropdown\" data-toggle=\"dropdown\">\r\n                            <FontAwesomeIcon size=\"lg\" icon={faEnvelopeOpen} />\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right py-0\" aria-labelledby=\"messagesDropdown\">\r\n                            <div className=\"dropdown-menu-header\">\r\n                                <div className=\"position-relative\">\r\n                                    4 New Messages\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"list-group\">\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <img src=\"img/avatars/avatar-5.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Michelle Bilodeau\" />\r\n                                        </div>\r\n                                        <div className=\"col-10 pl-2\">\r\n                                            <div className=\"text-dark\">Michelle Bilodeau</div>\r\n                                            <div className=\"text-muted small mt-1\">Nam pretium turpis et arcu. Duis arcu tortor.</div>\r\n                                            <div className=\"text-muted small mt-1\">5m ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <img src=\"img/avatars/avatar-3.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Kathie Burton\" />\r\n                                        </div>\r\n                                        <div className=\"col-10 pl-2\">\r\n                                            <div className=\"text-dark\">Kathie Burton</div>\r\n                                            <div className=\"text-muted small mt-1\">Pellentesque auctor neque nec urna.</div>\r\n                                            <div className=\"text-muted small mt-1\">30m ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <img src=\"img/avatars/avatar-2.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Alexander Groves\" />\r\n                                        </div>\r\n                                        <div className=\"col-10 pl-2\">\r\n                                            <div className=\"text-dark\">Alexander Groves</div>\r\n                                            <div className=\"text-muted small mt-1\">Curabitur ligula sapien euismod vitae.</div>\r\n                                            <div className=\"text-muted small mt-1\">2h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <img src=\"img/avatars/avatar-4.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Daisy Seger\" />\r\n                                        </div>\r\n                                        <div className=\"col-10 pl-2\">\r\n                                            <div className=\"text-dark\">Daisy Seger</div>\r\n                                            <div className=\"text-muted small mt-1\">Aenean tellus metus, bibendum sed, posuere ac, mattis non.</div>\r\n                                            <div className=\"text-muted small mt-1\">5h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"dropdown-menu-footer\">\r\n                                <a href=\"#\" className=\"text-muted\">Show all messages</a>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown ml-lg-2\">\r\n                        <a className=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"alertsDropdown\" data-toggle=\"dropdown\">\r\n                            <FontAwesomeIcon size=\"lg\" icon={faBell} />\r\n                            <span className=\"indicator\"></span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right py-0\" aria-labelledby=\"alertsDropdown\">\r\n                            <div className=\"dropdown-menu-header\">\r\n                                4 New Notifications\r\n                                </div>\r\n                            <div className=\"list-group\">\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <FontAwesomeIcon color=\"red\" icon={faBell} />\r\n                                        </div>\r\n                                        <div className=\"col-10\">\r\n                                            <div className=\"text-dark\">Update completed</div>\r\n                                            <div className=\"text-muted small mt-1\">Restart server 12 to complete the update.</div>\r\n                                            <div className=\"text-muted small mt-1\">2h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <FontAwesomeIcon color=\"orange\" icon={faEnvelopeOpen} />\r\n                                        </div>\r\n                                        <div className=\"col-10\">\r\n                                            <div className=\"text-dark\">Lorem ipsum</div>\r\n                                            <div className=\"text-muted small mt-1\">Aliquam ex eros, imperdiet vulputate hendrerit et.</div>\r\n                                            <div className=\"text-muted small mt-1\">6h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <FontAwesomeIcon icon={faBuilding} />\r\n                                        </div>\r\n                                        <div className=\"col-10\">\r\n                                            <div className=\"text-dark\">Login from 192.186.1.1</div>\r\n                                            <div className=\"text-muted small mt-1\">8h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"#\" className=\"list-group-item\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-2\">\r\n                                            <FontAwesomeIcon color=\"green\" icon={faBellSlash} />\r\n                                        </div>\r\n                                        <div className=\"col-10\">\r\n                                            <div className=\"text-dark\">New connection</div>\r\n                                            <div className=\"text-muted small mt-1\">Anna accepted your request.</div>\r\n                                            <div className=\"text-muted small mt-1\">12h ago</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"dropdown-menu-footer\">\r\n                                <a href=\"#\" className=\"text-muted\">Show all notifications</a>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown ml-lg-2\">\r\n                        <a className=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"userDropdown\" data-toggle=\"dropdown\">\r\n                            <FontAwesomeIcon size=\"lg\" icon={faCog} />\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                            <a className=\"dropdown-item\" href=\"#\"><FontAwesomeIcon icon={faUser} />  View Profile</a>\r\n                            <a className=\"dropdown-item\" href=\"#\"><FontAwesomeIcon icon={faComment} /> Contacts</a>\r\n                            <a className=\"dropdown-item\" href=\"#\"><FontAwesomeIcon icon={faChartPie} /> Analytics</a>\r\n                            <a className=\"dropdown-item\" href=\"#\"><FontAwesomeIcon icon={faCogs} /> Settings</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" onClick={signOut}><FontAwesomeIcon icon={faArrowCircleRight} /> Sign out</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\PrivateRoute.js",["175"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { APIs } from './APIs';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n\r\n    const checkUser = async () => {\r\n        let authToken = localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')).accessToken;\r\n        if (authToken) {\r\n            const requestOptions = { method: 'GET', headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` } };\r\n            let res = await fetch(`${APIs.user.getCurrent}`, requestOptions);\r\n            let response = await res.json();\r\n            setIsLoggedIn(response.code == 'ok' ? true : false);\r\n        } else setIsLoggedIn(false);\r\n    }\r\n\r\n    useEffect(() => { checkUser(); }, [])\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            (isLoggedIn) ? <Component {...props} /> : <Redirect to='/login' />\r\n        )} />\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\SideBar.js",["176","177","178","179","180","181"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Avatar from '../../Images/avatars/avatar.jpg';\r\nimport { getSideList } from '../Common/Utils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getRecordDetails } from '../Common/Utils';\r\n\r\nexport default function SideBar() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [child, setChild] = useState('');\r\n    const [item, setItem] = useState('')\r\n    const [sideList, setSideList] = useState([])\r\n\r\n    const itemClick = (item) => { setItem(item); }\r\n    const childClick = (child) => { setChild(child); }\r\n    const updSideBar = () => { setSideList(getSideList()); }\r\n\r\n    useEffect(() => { updSideBar(); }, []);\r\n\r\n    useEffect(() => {\r\n        let pathArr = history.location.pathname && history.location.pathname.split('/');\r\n        if (pathArr[1] === 'list' && pathArr[2]) {\r\n            let recDetails = getRecordDetails(pathArr[2]);\r\n            pathArr = recDetails && recDetails.pathName.split('/') || pathArr;\r\n        }\r\n        setItem(pathArr[1] !== 'list' ? pathArr[1] : '');\r\n        setChild(pathArr[2] || '');\r\n    }, [])\r\n\r\n    return (\r\n        <nav id=\"sidebar\" className=\"sidebar\">\r\n\r\n            <Link className=\"sidebar-brand\" to=\"/\"><FontAwesomeIcon icon=\"star\" size=\"lg\" /> Mavis </Link>\r\n            <div className=\"sidebar-content\">\r\n                <div className=\"sidebar-user\">\r\n                    <img src={Avatar} className=\"img-fluid rounded-circle mb-2\" alt=\"Sathasivam Sujee\" />\r\n                    <div className=\"font-weight-bold\">Sathasivam Sujee</div>\r\n                    <small>Full-stack Developer</small>\r\n                </div>\r\n                <ul className=\"sidebar-nav \">\r\n                    {\r\n                        sideList.map((list, idx) => (\r\n                            <SideBarHead list={list} key={`h${idx.toString()}`} itemClick={itemClick} childClick={childClick} child={child} item={item} />\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction SideBarHead({ list, itemClick, childClick, child, item }) {\r\n    return (\r\n        <>\r\n            <li className=\"sidebar-header\"> {list.text} </li>\r\n            {\r\n                list.items.map((listItems, idx) => (\r\n                    <SideBarMenu listItems={listItems} key={list.val + idx} itemClick={itemClick} childClick={childClick} child={child} item={item} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction SideBarMenu({ listItems, itemClick, childClick, child, item }) {\r\n    return (\r\n        <li className={`sidebar-item  ${listItems.val == item ? 'active' : ''}`} onClick={() => itemClick(listItems.val)}>\r\n            <a href={`#${listItems.val}`} data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\r\n                <FontAwesomeIcon icon={listItems.icon} /> <span className=\"align-middle\"> {listItems.text}</span>\r\n            </a>\r\n            <ul id={listItems.val} className={`sidebar-dropdown list-unstyled collapse ${listItems.val == item ? '' : ''}`} data-parent=\"#sidebar\">\r\n                {\r\n                    listItems.items.map((listChild, idx) => (\r\n                        <SideBarList listChild={listChild} parent={listItems.val} idx={idx} key={`l${idx}`} childClick={childClick} child={child} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction SideBarList({ listChild, parent, childClick, child }) {\r\n    return (\r\n        <li className={`sidebar-item ${child == listChild.val ? 'active' : ''}`} onClick={() => childClick(listChild.val)}>\r\n            <Link className=\"sidebar-link\" to={`/${parent}/${listChild.val}`}>{listChild.text}</Link>\r\n        </li>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Footer.js",["182","183","184","185"],"import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row text-muted\">\r\n                    <div className=\"col-8 text-left\">\r\n                        <ul className=\"list-inline\">\r\n                            <li className=\"list-inline-item\">\r\n                                <a className=\"text-muted\" href=\"#\">Support</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a className=\"text-muted\" href=\"#\">Privacy</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a className=\"text-muted\" href=\"#\">Terms of Service</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a className=\"text-muted\" href=\"#\">Contact</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-4 text-right\">\r\n                        <p className=\"mb-0\">\r\n                            &copy; 2021 - <a href=\"dashboard-default.html\" className=\"text-muted\">Mavis</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\IdleTimerContainer.js",["186"],"import React, { useRef } from 'react'\r\nimport IdleTimer from 'react-idle-timer';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logout } from '../Common/Utils';\r\n\r\nexport default function IdleTimerContainer() {\r\n\r\n    const history = useHistory();\r\n\r\n    const idleTimerRef = useRef(null);\r\n\r\n    const onIdle = async () => {\r\n        if (localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')).accessToken) {\r\n            if (await logout()) {\r\n                history.push('/');\r\n                history.go(0);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IdleTimer ref={idleTimerRef} timeout={20 * 60 * 1000} onIdle={onIdle} />\r\n        </>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Reset.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\NotFound.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\PrintView.js",["187","188","189"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport PrtUserManager from '../Reports/Admin/PrtUserManager';\r\nimport \"../../App.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport { getRecordDetails } from './Utils';\r\n\r\nexport default function PrintView({ match }) {\r\n\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    const currPage = getRecordDetails(match.params.record) || {};\r\n    currPage.pageType = 'Report'\r\n    \r\n    return (\r\n        <div>\r\n            <main className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <Header currPage={currPage} />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n\r\n                            <div className=\"card\">\r\n\r\n\r\n                                <div className=\"card-body m-sm-3 m-md-5\">\r\n                                    <div className=\"tool-bar\">\r\n                                        <a onClick={handlePrint} className=\"btn btn-primary\"> Print this report </a>\r\n                                        <Link to={`/${match.params.path}/${match.params.record}/${match.params.id}`} className=\"btn btn-light\"> Go to record </Link>\r\n                                    </div>\r\n                                    <PrtUserManager ref={componentRef} recordid={match.params.id} />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\ListView.js",["190","191","192","193"],"import React, { useEffect, useState } from 'react'\r\nimport { useLocation, useHistory, Link } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport { getRecordDetails } from '../Common/Utils';\r\nimport $ from 'jquery';\r\nimport \"datatables.net-dt\"\r\nimport \"datatables.net-buttons\"\r\nimport 'datatables.net-buttons/js/buttons.colVis';\r\nimport 'datatables.net-buttons/js/buttons.flash';\r\nimport 'datatables.net-buttons/js/buttons.html5';\r\nimport 'datatables.net-buttons/js/buttons.print';\r\nimport 'datatables.net-buttons/js/dataTables.buttons';\r\n\r\n\r\nexport default function ListView({ match }) {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [recordList, setRecordList] = useState([]);\r\n\r\n    console.log('location', location.pathname);\r\n    console.log('match', match.params.record);\r\n\r\n    let currPage = getRecordDetails(match.params.record) || {};\r\n\r\n    currPage.list = 'List';\r\n\r\n    console.log('currPage', currPage);\r\n\r\n    const _getRecordData = async (recordType) => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`http://localhost:5000/${match.params.record}`, requestOptions);\r\n        let response = await res.json();\r\n\r\n        console.log('response', response);\r\n\r\n        return response;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let list = await _getRecordData();\r\n        setRecordList(list);\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <Header currPage={currPage} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h5 className=\"card-title\">List View</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <ListViewTable recordList={recordList} currPage={currPage} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction ListViewTable({ recordList, currPage }) {\r\n\r\n    useEffect(() => {\r\n        $('#datatables-basic').DataTable({\r\n            responsive: true\r\n        });\r\n        // Datatables with Buttons\r\n        var datatablesButtons = $('#datatables-buttons').DataTable({\r\n            lengthChange: !1,\r\n            buttons: [\"copy\", \"print\"],\r\n            responsive: true\r\n        });\r\n        datatablesButtons.buttons().container().appendTo(\"#datatables-buttons_wrapper .col-md-6:eq(0)\")\r\n\r\n    }, [ $('#datatables-basic')])\r\n\r\n\r\n    let rowHead, tableHead;\r\n\r\n    if (recordList.length > 0) {\r\n        rowHead = Object.keys(recordList[0])\r\n        console.log('rowHead', rowHead);\r\n        tableHead = <TableHead rowHead={rowHead} />\r\n    }\r\n    else\r\n        return <div>No records found</div>\r\n\r\n    return (\r\n        <table id=\"datatables-basic\" className=\"table table-striped list-view-table\" style={{ width: '100%' }}>\r\n            <thead>\r\n                <tr>{tableHead}</tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    recordList.map((row) => (\r\n                        <tr>\r\n                            {\r\n                                rowHead.map((val, idx) => (\r\n                                    <TableRow row={row} val={val} idx={idx} currPage={currPage} />\r\n\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>{tableHead}</tr>\r\n            </tfoot>\r\n        </table>\r\n    )\r\n}\r\n\r\nfunction TableHead({ rowHead }) {\r\n    return (\r\n        rowHead.map((head) => (\r\n            <th>{head}</th>\r\n        ))\r\n    )\r\n}\r\n\r\nfunction TableRow({ val, row, idx, currPage }) {\r\n    return (\r\n        <td>\r\n            {\r\n                (idx === 1) ? <Link to={`${currPage.pathName}/${row[\"Record ID\"]}`}>{row[val]}</Link> : row[val]\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Admin\\Home.js",["194","195"],"import React from 'react'\r\nimport Header from '../../Common/Header'\r\n\r\nexport default function Home() {\r\n\r\n\r\n    const currPage = {\r\n        pageType: '',\r\n        pageGroup: '',\r\n        pageName: ''\r\n    }\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <div className=\"container-fluid\">\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Admin\\UserManager.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { generatePath } from 'react-router';\r\n\r\nimport Avatar from '../../../Images/avatars/avatar.jpg';\r\nimport Divider from '../../../Images/commons/divider.gif';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight, faPrint, faTrash, faUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport AddSelect from '../../Common/AddSelect'\r\nimport Header from '../../Common/Header';\r\nimport MessageBox from '../../Common/MessageBox';\r\nimport ModalPopup from '../../Common/ModalPopup'\r\nimport { APIs } from '../../Common/APIs';\r\nimport StateSelect from '../../SelectOptions/StateSelect';\r\n\r\nexport default function UserManager({ match }) {\r\n\r\n    const currPage = { pageType: 'Master Files', pageGroup: 'Admin', pageName: 'User Account' }\r\n\r\n    const initialUser = { \"username\": \"\", \"bio\": \"\", \"userid\": \"\", \"jobtitle\": \"\", \"firstname\": \"\", \"lastname\": \"\", \"supervisor\": 0, \"email\": \"\", \"phone\": \"\", \"mobile\": \"\", \"addr1\": \"\", \"addr2\": \"\", \"city\": \"\", \"state\": 0, \"zip\": \"\", \"password\": \"\", \"giveaccess\": false, \"userrole\": 0 }\r\n    const history = useHistory();\r\n\r\n    //Modal Popup\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [confirmValue, setConfirmValue] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('');\r\n    const [modalContent, setModalContent] = useState('');\r\n\r\n    //Message Box\r\n    const [msgShow, setMsgShow] = useState('d-none');\r\n    const [msgClass, setMsgClass] = useState('success');\r\n    const [msgTitle, setMsgTitle] = useState('');\r\n    const [msgContent, setMsgContent] = useState('');\r\n\r\n    const [currMode, setCurrMode] = useState('edit-mode');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n    const [states, setStates] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const [user, setUser] = useState(initialUser);\r\n    const [confirmPwd, setConfirmPwd] = useState('');\r\n    const [supervisors, setSupervisors] = useState([]);\r\n    const [cMode, setCMode] = useState('init');\r\n    const [toolBar, setToolBar] = useState('');\r\n    const [recordID, setrecordID] = useState(0)\r\n\r\n    const getUser = async (userID) => {\r\n        if (userID) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.user.get}/${userID}`, requestOptions);\r\n            let response = await res.json();\r\n\r\n            console.log('response', response);\r\n            setUser(response);\r\n        } else\r\n            setUser(initialUser);\r\n    }\r\n\r\n    const dataPrev = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.user.prev}/${match.params.id}`, requestOptions);\r\n\r\n        let response = await res.json();\r\n        if (response.code === \"ok\")\r\n            if (response.result.previd) {\r\n                updatePath(response.result.previd);\r\n                //  setrecordID(response.result.previd)\r\n            }\r\n    }\r\n\r\n    const dataNext = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.user.next}/${match.params.id}`, requestOptions);\r\n        let response = await res.json();\r\n        console.log('response', response);\r\n        if (response.code === \"ok\")\r\n            if (response.result.nextid) {\r\n                updatePath(response.result.nextid);\r\n                // setrecordID(response.result.nextid);\r\n            }\r\n    }\r\n\r\n    const dataDelete = async () => {\r\n        setModalHeading('Confirmation');\r\n        setModalContent('Are you sure you want to delete this record?');\r\n        setCMode('delete');\r\n        setModalShow(true);\r\n    }\r\n\r\n    const deleteRecord = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.user.delete}/${match.params.id}`, requestOptions);\r\n        let response = await res.json();\r\n\r\n\r\n        showMessage('Confirmation', response.message, 'danger');\r\n\r\n        if (response.code === \"ok\") {\r\n            history.push('/list/user');\r\n            history.go(0);\r\n        }\r\n    }\r\n\r\n    const dataPrint = () => {\r\n        alert('Print');\r\n    }\r\n\r\n    const updatePath = (id) => {\r\n        const path = generatePath(match.path, { id });\r\n        history.replace(path);\r\n        history.go(0);\r\n    }\r\n\r\n    const _setObjects = () => {\r\n        switch (cMode) {\r\n            case 'new':\r\n                setCurrMode('edit-mode');\r\n                setIsDisabled(false);\r\n                setToolBar(<>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to=\"/\"> <button type=\"button\" className=\"btn btn-light\">Cancel</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={() => getUser(match.params.id)} className=\"btn btn-light tool-bar-list\">Reset</button>\r\n                </>);\r\n\r\n                break;\r\n            case 'edit':\r\n                setCurrMode('edit-mode');\r\n                setIsDisabled(false);\r\n                setConfirmPwd('');\r\n                setToolBar(<>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to={`/admin/user/${match.params.id}`}><button type=\"button\" className=\"btn btn-light\">Cancel</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={() => getUser(match.params.id)} className=\"btn btn-light tool-bar-list\">Reset</button>\r\n                </>);\r\n                break;\r\n            case 'view':\r\n                setCurrMode('view-mode');\r\n                setIsDisabled(true);\r\n                setToolBar(<>\r\n                    <Link to={`/admin/user/${match.params.id}/e`}><button type=\"button\" className=\"btn btn-primary\">Edit</button></Link>\r\n                    <Link to=\"/\"> <button type=\"button\" className=\"btn btn-light\">Back</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={dataDelete} className=\"btn btn-light tool-bar-list\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    <Link to={`/print/admin/user/${match.params.id}`}><button type=\"button\" className=\"btn btn-light mr-1\"><FontAwesomeIcon icon={faPrint} /> </button></Link>\r\n                </>);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (match.params.mode == 'e')\r\n            setCMode('edit');\r\n        else if (match.params.mode == 'v')\r\n            setCMode('view');\r\n        else if (match.params.id)\r\n            setCMode('view');\r\n        else\r\n            setCMode('new');\r\n\r\n        getUser(match.params.id);\r\n    }, [match.params.id, match.params.mode]);\r\n\r\n    useEffect(() => {\r\n        if (confirmValue) {\r\n            if (cMode === 'delete') {\r\n                deleteRecord();\r\n            }\r\n            setCMode('view')\r\n        }\r\n        setConfirmValue(false)\r\n    }, [confirmValue]);\r\n\r\n    useEffect(() => {\r\n        _setObjects();\r\n    }, [cMode])\r\n\r\n    // useEffect(() => {\r\n    //     setrecordID(match.params.id);\r\n    // }, [match.params.id])\r\n\r\n    const _getStates = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n\r\n        let response = await fetch(APIs.list.state, requestOptions);\r\n        let res = await response.json();\r\n\r\n        if (res.code == 'ok') { setStates(res.data); }\r\n    }\r\n\r\n    const _getRoles = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n\r\n        let response = await fetch(`${APIs.user.role}`, requestOptions);\r\n        let res = await response.json();\r\n\r\n        if (res.code == 'ok') { setRoles(res.data); }\r\n\r\n    }\r\n\r\n    const _getSupervisors = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n\r\n        let response = await fetch(`${APIs.user.supervisors}/${match.params.id || 0}`, requestOptions);\r\n        let res = await response.json();\r\n\r\n        if (res.code == 'ok') { setSupervisors(res.data); }\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getStates();\r\n        _getRoles();\r\n        _getSupervisors();\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        console.log('user', user);\r\n        if (!validateEntries()) return false;\r\n\r\n        //API Call\r\n        let isSaved = saveData();\r\n        // let isSaved = await saveData();\r\n        //  if (isSaved) history.push(`/admin/user/${match.params.id}`);\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const newUser = { ...user };\r\n\r\n        console.log('newUser', newUser);\r\n\r\n        switch (e.target.name) {\r\n            case 'username':\r\n            case 'bio':\r\n            case 'userid':\r\n            case 'jobtitle':\r\n            case 'firstname':\r\n            case 'lastname':\r\n            case 'supervisor':\r\n            case 'phone':\r\n            case 'mobile':\r\n            case 'addr1':\r\n            case 'addr2':\r\n            case 'city':\r\n            case 'state':\r\n            case 'zip':\r\n            case 'password':\r\n            case 'userrole':\r\n                newUser[e.target.name] = e.target.value;\r\n                break;\r\n            case 'email':\r\n                newUser.email = e.target.value.toLowerCase();\r\n                break;\r\n            case 'confirmpassword':\r\n                setConfirmPwd(e.target.value);\r\n                break;\r\n            case 'giveaccess':\r\n                newUser.giveaccess = e.target.checked;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setUser(newUser);\r\n    }\r\n\r\n    const validateEntries = () => {\r\n\r\n        if (!user.firstname) {\r\n            showMessage('Validation', 'Invalid First Name', 'danger')\r\n            return false;\r\n        }\r\n\r\n        if (!user.lastname) {\r\n            showMessage('Validation', 'Invalid Last Name', 'danger')\r\n            return false;\r\n        }\r\n\r\n        if (!user.email) {\r\n            showMessage('Validation', 'Invalid Email Address', 'danger')\r\n            return false;\r\n        }\r\n\r\n        if (!user.password) {\r\n            showMessage('Validation', 'Invalid Password', 'danger')\r\n            return false;\r\n        }\r\n\r\n        if (user.password !== confirmPwd) {\r\n            showMessage('Validation', 'Passwords didn\\'t match. Try again.', 'danger')\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const saveData = async () => {\r\n\r\n        let url, method, body;\r\n        switch (cMode) {\r\n            case 'new':\r\n                url = `${APIs.user.create}`;\r\n                method = 'POST';\r\n                break;\r\n            case 'edit':\r\n                url = `${APIs.user.edit}/${match.params.id}`;\r\n                method = 'PUT';\r\n                let objUser = delete user['recordid'];\r\n                setUser(objUser);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        const requestOptions = {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` },\r\n            body: JSON.stringify(user)\r\n        };\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        const data = await response.json();\r\n        console.log('data', data);\r\n\r\n        if (data.code === 'ok') {\r\n            showMessage('Confirmation', data.message, 'success')\r\n            history.push(`/admin/user/${match.params.id || data.recordid}`);\r\n        } else\r\n            showMessage('Confirmation', data.message, 'danger')\r\n\r\n    }\r\n\r\n    const showMessage = (title, content, classType) => {\r\n        setMsgTitle(title);\r\n        setMsgContent(content);\r\n        setMsgClass(classType);\r\n        setMsgShow('');\r\n\r\n        setTimeout(() => {\r\n            setMsgShow('d-none');\r\n        }, 10000);\r\n    }\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <Header currPage={currPage} />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h5 className=\"card-title mb-0\">Profile Settings</h5>\r\n                            </div>\r\n\r\n                            <div className=\"list-group list-group-flush\" role=\"tablist\">\r\n                                <a className=\"list-group-item list-group-item-action active\" data-toggle=\"list\" href=\"#account\" role=\"tab\"> Account </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#contact\" role=\"tab\"> Contact </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#access\" role=\"tab\"> Access </a>\r\n                                {/* <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#\" role=\"tab\"> Email notifications </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#\" role=\"tab\"> Web notifications  </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#\" role=\"tab\">  Widgets </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#\" role=\"tab\"> Your data  </a>\r\n                                <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#\" role=\"tab\">  Delete account </a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-9 col-xl-10\">\r\n                        <form id=\"user-form\" onSubmit={onSubmit}>\r\n                            <div className=\"tab-content\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <MessageBox msgShow={msgShow} msgClass={msgClass} msgTitle={msgTitle} msgContent={msgContent} />\r\n                                        <ModalPopup modalShow={modalShow} modalClose={() => setModalShow(false)} confirmValue={setConfirmValue} modalHeading={modalHeading} modalContent={modalContent} />\r\n                                        {/* <AlertBox /> */}\r\n                                        <div className=\"card-actions tool-bar\">\r\n                                            {toolBar}\r\n                                            <div className=\" float-right \">\r\n                                                <a onClick={dataPrev} hidden={!isDisabled} className=\"mr-1 tool-bar-list\"> <FontAwesomeIcon className=\"align-middle\" icon={faArrowLeft} /> </a>\r\n                                                <a onClick={dataNext} hidden={!isDisabled} className=\"mr-1 tool-bar-list\"> <FontAwesomeIcon className=\"align-middle\" icon={faArrowRight} /> </a>\r\n                                                <Link to=\"/list/user\" className=\"tool-bar-list\">List</Link>\r\n                                            </div>\r\n\r\n                                            <div className=\"d-inline-block dropdown show\">\r\n                                                <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                    <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                </a>\r\n                                                <div className=\"dropdown-menu dropdown-menu-left\">\r\n                                                    <a className=\"dropdown-item\" href=\"#\">New</a>\r\n                                                    <a className=\"dropdown-item\" href=\"#\">Copy</a>\r\n                                                    <a className=\"dropdown-item\" href=\"#\">PDF</a>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <h5 className=\"card-title mb-0\">Public info</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"username\">Username</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"username\" name=\"username\" placeholder=\"Username\" value={user.username} onChange={handleChange} />\r\n                                                    <label id=\"validation-required-error\" className=\"error jquery-validation-error small form-text invalid-feedback\" htmlFor=\"validation-required\">This field is required.</label>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"bio\">Biography</label>\r\n                                                    <textarea rows=\"2\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"bio\" name=\"bio\" placeholder=\"Tell something about yourself\" value={user.bio} onChange={handleChange}></textarea>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <div className=\"text-center\">\r\n                                                    <img alt=\"Chris Wood\" src={Avatar} className=\"rounded-circle img-responsive mt-2\" width=\"128\" height=\"128\" />\r\n                                                    <div className=\"mt-2\">\r\n                                                        <span className=\"btn btn-primary\"><FontAwesomeIcon icon={faUpload} /> Upload</span>\r\n                                                        <input className=\"btn btn-primary\" type=\"file\" name=\"image\" id=\"image\" hidden />\r\n                                                    </div>\r\n                                                    <small>For best results, use an image at least 128px by 128px in .jpg format</small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade show active\" id=\"account\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <div className=\"card-actions float-right\">\r\n                                                <a href=\"#\" className=\"mr-1\">\r\n                                                    <i className=\"align-middle\" data-feather=\"refresh-cw\"></i>\r\n                                                </a>\r\n                                                <div className=\"d-inline-block dropdown show\">\r\n                                                    <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                        <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h5 className=\"card-title mb-0\">Primary Information</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"userid\">User ID</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"userid\" name=\"userid\" value={user.userid} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"jobtitle\">Job Title</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"jobtitle\" name=\"jobtitle\" value={user.jobtitle} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"firstname\">First name</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"firstname\" name=\"firstname\" value={user.firstname} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"lastname\">Last name</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"lastname\" name=\"lastname\" value={user.lastname} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"supervisor\">Supervisor</label>\r\n                                                    {/* <input type=\"text\" className={ `form-control ${currMode}` } id=\"supervisor\" name=\"supervisor\" value={user.supervisor} onChange={handleChange} /> */}\r\n                                                    <select id=\"supervisor\" name=\"supervisor\" className={`form-control ${currMode}`} disabled={isDisabled} value={user.supervisor} onChange={handleChange}>\r\n                                                        <option defaultValue=\"selected\">Choose...</option>\r\n                                                        <AddSelect options={supervisors} />\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade\" id=\"contact\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <div className=\"card-actions float-right\">\r\n                                                <a href=\"#\" className=\"mr-1\">\r\n                                                    <i className=\"align-middle\" data-feather=\"refresh-cw\"></i>\r\n                                                </a>\r\n                                                <div className=\"d-inline-block dropdown show\">\r\n                                                    <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                        <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h5 className=\"card-title mb-0\">Email | Phone | Address</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} name=\"email\" name=\"email\" value={user.email} onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"phone\">Phone</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"phone\" name=\"phone\" value={user.phone} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"mobile\">Mobile</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"mobile\" name=\"mobile\" value={user.mobile} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"addr1\">Address Line 1</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"addr1\" name=\"addr1\" value={user.addr1} onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"addr2\">Address Line 2</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"addr2\" name=\"addr2\" value={user.addr2} onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"city\">City</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"city\" name=\"city\" value={user.city} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"state\">State</label>\r\n                                                    {/* <select id=\"state\" name=\"state\" className={`form-control ${currMode}`} disabled={isDisabled} value={user.state} onChange={handleChange}>\r\n                                                        <option defaultValue=\"selected\">Choose...</option>\r\n                                                        <AddSelect options={states} />\r\n                                                    </select> */}\r\n                                                    <StateSelect id=\"state\" name=\"state\" className={`form-control ${currMode}`} disabled={isDisabled} value={user.state} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-2\">\r\n                                                    <label htmlFor=\"zip\">Zip</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"zip\" name=\"zip\" value={user.zip} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className=\"tab-pane fade\" id=\"access\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <div className=\"card-actions float-right\">\r\n                                                <a href=\"#\" className=\"mr-1\">\r\n                                                    <i className=\"align-middle\" data-feather=\"refresh-cw\"></i>\r\n                                                </a>\r\n                                                <div className=\"d-inline-block dropdown show\">\r\n                                                    <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                        <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h5 className=\"card-title mb-0\">Access</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n\r\n                                            <div className=\"form-row\" hidden={isDisabled}>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"password\">Password</label>\r\n                                                    <input type=\"password\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"password\" name=\"password\" value={user.password} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n                                                    <input type=\"password\" className={`form-control ${currMode}`} disabled={isDisabled} hidden={isDisabled} name=\"confirmpassword\" value={confirmPwd} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"userrole\">User Role</label>\r\n                                                    <select id=\"userrole\" className={`form-control ${currMode}`} disabled={isDisabled} name=\"userrole\" value={user.userrole} onChange={handleChange}>\r\n                                                        <option defaultValue=\"selected\">Choose...</option>\r\n                                                        <AddSelect options={roles} />\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group  col-md-3\">\r\n                                                    <label className=\"custom-control custom-checkbox d-block\">\r\n                                                        <input type=\"checkbox\" className=\"custom-control-input\" name=\"giveaccess\" checked={user.giveaccess} onChange={handleChange} />\r\n                                                        <span className=\"custom-control-label\">Give Access</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Pages\\Stock\\PurchaseOrder.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { generatePath } from 'react-router';\r\n\r\nimport Divider from '../../../Images/commons/divider.gif';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight, faSearch, faPrint, faTrash, faUpload, faTimes, faPlus, faCalculator } from '@fortawesome/free-solid-svg-icons'\r\nimport AddSelect from '../../Common/AddSelect'\r\nimport Header from '../../Common/Header';\r\nimport MessageBox from '../../Common/MessageBox';\r\nimport ModalPopup from '../../Common/ModalPopup'\r\nimport { APIs } from '../../Common/APIs';\r\nimport LocationSelect from '../../SelectOptions/LocationSelect';\r\nimport CurrencySelect from '../../SelectOptions/CurrencySelect';\r\nimport POTypeSelect from '../../SelectOptions/POTypeSelect';\r\nimport ItemSelect from '../../SelectOptions/ItemSelect';\r\nimport StateSelect from '../../SelectOptions/StateSelect';\r\nimport DateSelect from '../../SelectOptions/DateSelect';\r\nimport SupplierSelect from '../../SelectOptions/SupplierSelect';\r\n\r\nexport default function PurchaseOrder({ match }) {\r\n\r\n    const currPage = { pageType: 'Transaction', pageGroup: 'Purchasing', pageName: 'Purchase Order' }\r\n    const history = useHistory();\r\n    let initialPOHed = { refno: \"\", manualref: \"\", trandate: \"\", currency: \"\", exchangerate: \"\", potype: \"\", supplier: \"\", location: \"\", memo: \"\", contactperson: \"\", addr1: \"\", addr2: \"\", city: \"\", state: \"\", zip: \"\", expdeldate: \"\", contactnumber: \"\" };\r\n    const initialPODet = { \"id\": 1, \"item\": \"\", \"quantity\": \"\", \"purchaseprice\": \"\", \"discount\": \"\", \"value\": \"\", \"tax\": \"\", \"grossvalue\": \"\" };\r\n\r\n    //Modal Popup\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [confirmValue, setConfirmValue] = useState(false);\r\n    const [modalHeading, setModalHeading] = useState('');\r\n    const [modalContent, setModalContent] = useState('');\r\n\r\n    //Message Box\r\n    const [msgShow, setMsgShow] = useState('d-none');\r\n    const [msgClass, setMsgClass] = useState('success');\r\n    const [msgTitle, setMsgTitle] = useState('');\r\n    const [msgContent, setMsgContent] = useState('');\r\n    const [lineValidateMsg, setLineValidateMsg] = useState(\"\")\r\n\r\n    const [currMode, setCurrMode] = useState('edit-mode');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n    const [states, setStates] = useState([]);\r\n    const [count, setCount] = useState(0)\r\n\r\n    const [poHed, setPOHed] = useState(initialPOHed);\r\n    const [poDet, setPODet] = useState({ 1: initialPODet });\r\n    const [totals, setTotals] = useState({ totaldiscount: 0, totaltax: 0, subtotal: 0, total: 0 })\r\n\r\n    const [cMode, setCMode] = useState('init');\r\n    const [toolBar, setToolBar] = useState('');\r\n    const [recordID, setrecordID] = useState(0);\r\n\r\n    const [selectedRow, setSelectedRow] = useState(\"0\");\r\n\r\n    const clickRow = (e) => {\r\n        if (cMode == 'new' || cMode == 'edit')\r\n            setSelectedRow(e);\r\n    }\r\n\r\n    const insertRow = (e) => {\r\n        if (!_validateLine(e)) return;\r\n\r\n        let newLine = { ...poDet };\r\n        let x = parseFloat(parseFloat(Object.keys(newLine)[Object.keys(newLine).length - 1]) + 1);\r\n        initialPODet.id = x;\r\n        newLine[x] = initialPODet;\r\n        setPODet(newLine);\r\n        setSelectedRow(x);\r\n    }\r\n\r\n    const setLineItem = (e) => {\r\n\r\n        let fieldRow = e.target.id.replace(e.target.name, \"\");\r\n        let newLine = { ...poDet };\r\n\r\n        switch (e.target.name) {\r\n            case 'item':\r\n                newLine[fieldRow][e.target.name] = e.target.value;\r\n                break;\r\n            case 'quantity':\r\n            case 'purchaseprice':\r\n            case 'discount':\r\n            case 'value':\r\n            case 'tax':\r\n                let regex = /^\\d*[.]?\\d*$/;\r\n                if (e.target.value === \"\" || regex.test(e.target.value))\r\n                    newLine[fieldRow][e.target.name] = e.target.value || 0;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setCount(count + 1);\r\n        setPODet(newLine)\r\n    }\r\n\r\n    const _calc = () => {\r\n        console.log('poDet', JSON.stringify(poDet));\r\n\r\n        let totaltax = 0, totaldiscount = 0, total = 0;\r\n\r\n        let calcPODet = { ...poDet }\r\n        for (let i = 0; i < Object.keys(calcPODet).length; i++) {\r\n            const elem = Object.keys(calcPODet)[i];\r\n            // alert(JSON.stringify(calcPODet[elem]))\r\n\r\n            let id = calcPODet[elem].id;\r\n            let qty = parseFloat(calcPODet[elem].quantity) || 0;\r\n            let purchaseprice = parseFloat(calcPODet[elem].purchaseprice) || 0;\r\n            let subtotal = (qty * purchaseprice);\r\n            let discount = parseFloat(calcPODet[elem].discount) || 0;\r\n            let subtotalwithdiscount = subtotal - discount;\r\n            let tax = parseFloat(calcPODet[elem].tax) || 0;\r\n            let taxvalue = tax ? (tax / 100 * subtotalwithdiscount) : 0\r\n            let grossamount = subtotalwithdiscount + taxvalue;\r\n\r\n            calcPODet[id] = {\r\n                \"id\": calcPODet[elem].id,\r\n                \"item\": calcPODet[elem].item,\r\n                \"quantity\": qty,\r\n                \"purchaseprice\": purchaseprice,\r\n                \"discount\": discount,\r\n                \"value\": subtotalwithdiscount,\r\n                \"tax\": tax,\r\n                \"grossamount\": grossamount\r\n            }\r\n\r\n            totaltax += taxvalue;\r\n            totaldiscount += discount;\r\n            total += subtotal;\r\n\r\n            setPODet(calcPODet);\r\n        }\r\n\r\n        setTotals({\r\n            totaldiscount: totaldiscount,\r\n            totaltax: totaltax,\r\n            subtotal: total,\r\n            total: total - totaldiscount + totaltax\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        _calc()\r\n    }, [count])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLineValidateMsg('')\r\n        }, 4000);\r\n    }, [lineValidateMsg])\r\n\r\n    const _validateLine = () => {\r\n\r\n        let lineObj = Object.keys(poDet);\r\n\r\n        for (let i = 0; i < lineObj.length; i++) {\r\n            const row = lineObj[i];\r\n\r\n            if (!poDet[row].item || !poDet[row].quantity || !poDet[row].purchaseprice) {\r\n\r\n                if (!poDet[row].purchaseprice) setLineValidateMsg(\"Invalid purchaseprice\");\r\n                if (!poDet[row].quantity) setLineValidateMsg(\"Invalid quantity\");\r\n                if (!poDet[row].item) setLineValidateMsg(\"Invalid item\");\r\n\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const removeRow = (e) => {\r\n        let newLine = { ...poDet };\r\n        delete newLine[e];\r\n\r\n        if (JSON.stringify(newLine) === JSON.stringify({}))\r\n            setPODet({ 1: initialPODet })\r\n        else\r\n            setPODet(newLine);\r\n\r\n        setCount(count + 1);\r\n    }\r\n\r\n    const getPO = async (poID) => {\r\n        if (poID) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.po.get}/${poID}`, requestOptions);\r\n            let response = await res.json();\r\n\r\n            if (response.code == 'ok') {\r\n                setPOHed(response.data.pohed);\r\n                console.log('response.data.podet', JSON.stringify(response.data.podet))\r\n                console.log('response.data.pohed', JSON.stringify(response.data.pohed))\r\n                setPODet(response.data.podet);\r\n            }\r\n        } else {\r\n            setPOHed(initialPOHed);\r\n            setPODet({ 1: initialPODet });\r\n        }\r\n    }\r\n\r\n    const dataPrev = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.po.prev}/${match.params.id}`, requestOptions);\r\n\r\n        let response = await res.json();\r\n        if (response.code === \"ok\" && response.result.previd) updatePath(response.result.previd);\r\n\r\n    }\r\n\r\n    const dataNext = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.po.next}/${match.params.id}`, requestOptions);\r\n        let response = await res.json();\r\n        if (response.code === \"ok\" && response.result.nextid) updatePath(response.result.nextid);\r\n\r\n    }\r\n\r\n    const dataDelete = async () => {\r\n        setModalHeading('Confirmation');\r\n        setModalContent('Are you sure you want to delete this record?');\r\n        setCMode('delete');\r\n        setModalShow(true);\r\n    }\r\n\r\n    const deleteRecord = async () => {\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let res = await fetch(`${APIs.po.delete}/${match.params.id}`, requestOptions);\r\n        let response = await res.json();\r\n\r\n\r\n        showMessage('Confirmation', response.message, 'danger');\r\n\r\n        if (response.code === \"ok\") {\r\n            history.push('/list/po');\r\n            // history.go(0);\r\n        }\r\n    }\r\n\r\n    const dataPrint = () => {\r\n        alert('Print');\r\n    }\r\n\r\n    const updatePath = (id) => {\r\n        const path = generatePath(match.path, { id });\r\n        history.replace(path);\r\n        history.go(0);\r\n    }\r\n\r\n    const _setObjects = () => {\r\n        switch (cMode) {\r\n            case 'new':\r\n                setCurrMode('edit-mode');\r\n                setIsDisabled(false);\r\n                setToolBar(<>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to=\"/\"> <button type=\"button\" className=\"btn btn-light\">Cancel</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={() => getPO(match.params.id)} className=\"btn btn-light tool-bar-list\">Reset</button>\r\n                </>);\r\n\r\n                break;\r\n            case 'edit':\r\n                setCurrMode('edit-mode');\r\n                setIsDisabled(false);\r\n                setToolBar(<>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to={`/purchasing/po/${match.params.id}`}><button type=\"button\" className=\"btn btn-light\">Cancel</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={() => getPO(match.params.id)} className=\"btn btn-light tool-bar-list\">Reset</button>\r\n                </>);\r\n                break;\r\n            case 'view':\r\n                setCurrMode('view-mode');\r\n                setIsDisabled(true);\r\n                setToolBar(<>\r\n                    <Link to={`/purchasing/po/${match.params.id}/e`}><button type=\"button\" className=\"btn btn-primary\">Edit</button></Link>\r\n                    <Link to=\"/\"> <button type=\"button\" className=\"btn btn-light\">Back</button></Link>\r\n                    <img src={Divider} className=\"divider\" />\r\n                    <button type=\"button\" onClick={dataDelete} className=\"btn btn-light tool-bar-list\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    <Link to={`/print/purchasing/po/${match.params.id}`}><button type=\"button\" className=\"btn btn-light mr-1\"><FontAwesomeIcon icon={faPrint} /> </button></Link>\r\n                </>);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (match.params.mode == 'e')\r\n            setCMode('edit');\r\n        else if (match.params.mode == 'v')\r\n            setCMode('view');\r\n        else if (match.params.id)\r\n            setCMode('view');\r\n        else\r\n            setCMode('new');\r\n\r\n        getPO(match.params.id);\r\n    }, [match.params.id, match.params.mode]);\r\n\r\n    useEffect(() => {\r\n        if (confirmValue) {\r\n            if (cMode === 'delete') {\r\n                deleteRecord();\r\n            }\r\n            setCMode('view')\r\n        }\r\n        setConfirmValue(false)\r\n    }, [confirmValue]);\r\n\r\n    useEffect(() => {\r\n        _setObjects();\r\n    }, [cMode])\r\n\r\n    // useEffect(() => {\r\n    //     setrecordID(match.params.id);\r\n    // }, [match.params.id])\r\n\r\n    const _getStates = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n\r\n        let response = await fetch(APIs.list.state, requestOptions);\r\n        let res = await response.json();\r\n\r\n        if (res.code == 'ok') { setStates(res.data); }\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getStates();\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (!validateEntries())\r\n            return false;\r\n\r\n        let isSaved = saveData();\r\n\r\n        // API Call\r\n\r\n        // let isSaved = await saveData();\r\n        // if (isSaved) history.push(`/purchasing/po/${match.params.id}`);\r\n\r\n    }\r\n\r\n    const _getRef = async () => {\r\n        return await 'PO/0022'\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n        //  alert(e.target.value)\r\n\r\n        console.log('e', e)\r\n\r\n        const newPOHed = { ...poHed };\r\n\r\n        console.log('newPOHed', newPOHed);\r\n\r\n        if (e.target) {\r\n            switch (e.target.value) {\r\n                default:\r\n                    newPOHed[e.target.name] = e.target.value;\r\n                    break;\r\n            }\r\n        }\r\n        setPOHed(newPOHed);\r\n    }\r\n\r\n    const validateEntries = () => {\r\n\r\n        // if (!user.firstname) {\r\n        //     showMessage('Validation', 'Invalid First Name', 'danger')\r\n        //     return false;\r\n        // }\r\n\r\n        // if (!user.lastname) {\r\n        //     showMessage('Validation', 'Invalid Last Name', 'danger')\r\n        //     return false;\r\n        // }\r\n\r\n        // if (!user.email) {\r\n        //     showMessage('Validation', 'Invalid Email Address', 'danger')\r\n        //     return false;\r\n        // }\r\n\r\n        // if (!user.password) {\r\n        //     showMessage('Validation', 'Invalid Password', 'danger')\r\n        //     return false;\r\n        // }\r\n\r\n        // if (user.password !== confirmPwd) {\r\n        //     showMessage('Validation', 'Passwords didn\\'t match. Try again.', 'danger')\r\n        //     return false;\r\n        // }\r\n\r\n        const validPODet = { ...poDet };\r\n\r\n        let arrDet = Object.keys(validPODet);\r\n\r\n        for (let i = 0; i < arrDet.length; i++) {\r\n            if (!(validPODet[arrDet[i]].item && validPODet[arrDet[i]].quantity && validPODet[arrDet[i]].purchaseprice)) {\r\n                delete validPODet[arrDet[i]];\r\n            }\r\n        }\r\n\r\n        if (!Object.keys(validPODet).length) {\r\n            showMessage('Validation', 'Invalid Items', 'danger')\r\n            return false;\r\n        }\r\n\r\n        setPODet(validPODet);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    const saveData = async () => {\r\n\r\n        console.log('poHed poHed', JSON.stringify(poHed))\r\n        let validPOHed;\r\n        let url, method, body;\r\n        switch (cMode) {\r\n            case 'new':\r\n                url = `${APIs.po.create}`;\r\n                method = 'POST';\r\n                validPOHed = { ...poHed };\r\n                validPOHed.refno = await _getRef();\r\n                setPOHed(validPOHed);\r\n                break;\r\n            case 'edit':\r\n                url = `${APIs.po.edit}/${match.params.id}`;\r\n                method = 'PUT';\r\n                let objPO = {};\r\n                objPO.poHed = delete poHed['recordid'];\r\n                objPO.poDet = delete poDet['recordid'];\r\n                setPOHed(objPO.poHed);\r\n                setPODet(objPO.poDet);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n\r\n        let validPODet = { ...poDet };\r\n        let arrDet = Object.keys(validPODet);\r\n        for (let i = 0; i < arrDet.length; i++) {\r\n            if (!(validPODet[arrDet[i]].item && validPODet[arrDet[i]].quantity && validPODet[arrDet[i]].purchaseprice)) {\r\n                delete validPODet[arrDet[i]];\r\n            }\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` },\r\n            body: JSON.stringify({\r\n                poHed: validPOHed || poHed,\r\n                poDet: validPODet\r\n            })\r\n        };\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        const data = await response.json();\r\n        console.log('data', data);\r\n\r\n        if (data.code === 'ok') {\r\n            showMessage('Confirmation', data.message, 'success')\r\n            history.push(`/purchasing/po/${match.params.id || data.recordid}`);\r\n        } else\r\n            showMessage('Confirmation', data.message, 'danger')\r\n    }\r\n\r\n    const showMessage = (title, content, classType) => {\r\n\r\n        setMsgTitle(title);\r\n        setMsgContent(content);\r\n        setMsgClass(classType);\r\n        setMsgShow('');\r\n\r\n        setTimeout(() => {\r\n            setMsgShow('d-none');\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <Header currPage={currPage} />\r\n                <form id=\"user-form\" onSubmit={onSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 col-xl-2\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h5 className=\"card-title mb-0\">Purchase Tabs</h5>\r\n                                </div>\r\n                                <div className=\"list-group list-group-flush\" role=\"tablist\">\r\n                                    <a className=\"list-group-item list-group-item-action active\" data-toggle=\"list\" href=\"#general\" role=\"tab\"> General </a>\r\n                                    <a className=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#delivery\" role=\"tab\"> Delivery </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 col-xl-10\">\r\n                            <div className=\"tab-content\">\r\n                                <div className=\"\" id=\"\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <MessageBox msgShow={msgShow} msgClass={msgClass} msgTitle={msgTitle} msgContent={msgContent} />\r\n                                            <ModalPopup modalShow={modalShow} modalClose={() => setModalShow(false)} confirmValue={setConfirmValue} modalHeading={modalHeading} modalContent={modalContent} />\r\n                                            <div className=\"card-actions tool-bar\">\r\n                                                {toolBar}\r\n                                                <div className=\" float-right \">\r\n                                                    <a onClick={dataPrev} hidden={!isDisabled} className=\"mr-1 tool-bar-list\"> <FontAwesomeIcon className=\"align-middle\" icon={faArrowLeft} /> </a>\r\n                                                    <a onClick={dataNext} hidden={!isDisabled} className=\"mr-1 tool-bar-list\"> <FontAwesomeIcon className=\"align-middle\" icon={faArrowRight} /> </a>\r\n                                                    <Link to=\"/list/po\" className=\"tool-bar-list\">List</Link>\r\n                                                </div>\r\n                                                <div className=\"d-inline-block dropdown show\">\r\n                                                    <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                        <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-left\">\r\n                                                        <a className=\"dropdown-item\" href=\"#\">New</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Copy</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">PDF</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h5 className=\"card-title mb-0\">Document Number</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"refno\">Ref No</label>\r\n                                                    <input type=\"text\" className={`form-control view-mode`} disabled=\"true\" id=\"refno\" name=\"refno\" value={poHed.refno ? poHed.refno : 'To be generated...'} />\r\n                                                    <label id=\"validation-required-error\" className=\"error jquery-validation-error small form-text invalid-feedback\" htmlFor=\"validation-required\">This field is required.</label>\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"manualref\">Manual Ref</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"manualref\" name=\"manualref\" value={poHed.manualref} onChange={handleChange} />\r\n                                                    <label id=\"validation-required-error\" className=\"error jquery-validation-error small form-text invalid-feedback\" htmlFor=\"validation-required\">This field is required.</label>\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"trandate\">Date</label>\r\n                                                    <DateSelect className={`form-control ${currMode}`} disabled={isDisabled} id=\"trandate\" name=\"trandate\" selected={poHed.trandate ? new Date(poHed.trandate) : null} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade show active\" id=\"general\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <h5 className=\"card-title mb-0\">General info</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"currency\">Currency</label>\r\n                                                    <CurrencySelect className={`form-control ${currMode}`} disabled={isDisabled} id=\"currency\" name=\"currency\" value={poHed.currency} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"exchangerate\">Exchange Rate</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"exchangerate\" name=\"exchangerate\" value={poHed.exchangerate} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"potype\">PO Type</label>\r\n                                                    <POTypeSelect className={`form-control ${currMode}`} disabled={isDisabled} id=\"potype\" name=\"potype\" value={poHed.potype} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row d-none\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"tax\">Tax</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"tax\" name=\"tax\" onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"lastname\">Cost Center</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"lastname\" name=\"lastname\" onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"supplier\">Supplier</label>\r\n                                                    <SupplierSelect type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"supplier\" name=\"supplier\" value={poHed.supplier} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"location\">Location</label>\r\n                                                    <LocationSelect className={`form-control ${currMode}`} disabled={isDisabled} id=\"location\" name=\"location\" value={poHed.location} onChange={handleChange} currMode={currMode} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-12\">\r\n                                                    <label htmlFor=\"memo\">Memo</label>\r\n                                                    <textarea rows=\"2\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"memo\" name=\"memo\" value={poHed.memo} onChange={handleChange}></textarea>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-pane fade\" id=\"delivery\" role=\"tabpanel\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <div className=\"card-actions float-right\">\r\n                                                <a href=\"#\" className=\"mr-1\">\r\n                                                    <i className=\"align-middle\" data-feather=\"refresh-cw\"></i>\r\n                                                </a>\r\n                                                <div className=\"d-inline-block dropdown show\">\r\n                                                    <a href=\"#\" data-toggle=\"dropdown\" data-display=\"static\">\r\n                                                        <i className=\"align-middle\" data-feather=\"more-vertical\"></i>\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h5 className=\"card-title mb-0\">Delivery</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group\">\r\n\r\n                                                <label htmlFor=\"contactperson\">Contact Person</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"contactperson\" name=\"contactperson\" value={poHed.contactperson} onChange={handleChange} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"addr1\">Address Line 1</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"addr1\" name=\"addr1\" value={poHed.addr1} onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"addr2\">Address Line 2</label>\r\n                                                <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"addr2\" name=\"addr2\" value={poHed.addr2} onChange={handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"city\">City</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"city\" name=\"city\" value={poHed.city} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-4\">\r\n                                                    <label htmlFor=\"state\">State</label>\r\n                                                    <StateSelect id=\"state\" name=\"state\" className={`form-control ${currMode}`} disabled={isDisabled} value={poHed.state} onChange={handleChange} />\r\n\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-2\">\r\n                                                    <label htmlFor=\"zip\">Zip</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"zip\" name=\"zip\" value={poHed.zip} onChange={handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"expdeldate\">Expected Delivery Date</label>\r\n                                                    <DateSelect className={`form-control ${currMode}`} disabled={isDisabled} id=\"expdeldate\" name=\"expdeldate\" selected={poHed.expdeldate ? new Date(poHed.expdeldate) : null} onChange={handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <label htmlFor=\"contactnumber\">Contact Number</label>\r\n                                                    <input type=\"text\" className={`form-control ${currMode}`} disabled={isDisabled} id=\"contactnumber\" name=\"contactnumber\" value={poHed.contactnumber} onChange={handleChange} />\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card col-md-12 col-xl-12\">\r\n                            <div className=\"card-header\"><h5 className=\"card-title\">Purchase Items</h5>\r\n                                <h6 class=\"card-subtitle text-validate\" style={{ color: 'red' }}>{lineValidateMsg}</h6>\r\n                            </div>\r\n                            <table className=\"table form-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{ width: \"2%\" }}>Seq</th>\r\n                                        <th style={{ width: \"30%\" }}>Item</th>\r\n                                        <th style={{ width: \"10%\" }}>Quantity</th>\r\n                                        <th style={{ width: \"10%\" }}>Purchase Price</th>\r\n                                        <th style={{ width: \"10%\" }}>Discount</th>\r\n                                        <th style={{ width: \"10%\" }}>Amount</th>\r\n                                        <th style={{ width: \"10%\" }}>Tax</th>\r\n                                        <th style={{ width: \"10%\" }}>Gross Amount</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(poDet).map((row, idx) => (\r\n                                        <PurchaseOrderItem lineNo={idx + 1} clickRow={clickRow} selectedRow={selectedRow}\r\n                                            insertRow={insertRow} removeRow={removeRow} row={poDet[row]} setLineItem={setLineItem} currMode={currMode} key={idx + 1}\r\n                                            isDisabled={isDisabled} />\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr>\r\n                                        <td colSpan=\"2\" className={currMode == 'view-mode' ? 'd-none' : ''}>\r\n                                            <button className=\"btn btn-default\" type=\"button\" onClick={insertRow}><FontAwesomeIcon icon={faPlus} style={{ color: \"red123\" }} /> Insert</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\" >\r\n                        <div className=\"card col-md-4 col-xl-4\">\r\n                            <div className=\"card-header\"><h5 className=\"card-title\">Summary</h5>\r\n                                <h6 class=\"card-subtitle text-validate\" style={{ color: 'red' }}>{lineValidateMsg}</h6>\r\n                            </div>\r\n                            <table class=\"table table-sm\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Subtotal </td>\r\n                                        <td class=\"text-right\">${totals.subtotal}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Total Discount </td>\r\n                                        <td class=\"text-right\">${totals.totaldiscount}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Tax Total </td>\r\n                                        <td class=\"text-right\">{totals.totaltax}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Total </th>\r\n                                        <th class=\"text-right\">${totals.total}</th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"card-header\"></div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        </main >\r\n    )\r\n}\r\n\r\nfunction PurchaseOrderItem({ lineNo, clickRow, selectedRow, insertRow, removeRow, row, setLineItem, currMode, isDisabled }) {\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    const _getItems = () => {\r\n        let itemList = [\r\n            { value: \"1\", text: \"Item 1\" },\r\n            { value: \"2\", text: \"Item 2\" },\r\n            { value: \"3\", text: \"Item 3\" },\r\n            { value: \"4\", text: \"Item 4\" }\r\n        ]\r\n        setItems(itemList);\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getItems();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr key={row.id} onClick={() => clickRow(row.id)} >\r\n                <td>{lineNo}</td>\r\n                <td><ItemSelect id={`item${row.id}`} className={`form-control ${currMode}`} disabled={isDisabled} lineno={row.id} name=\"item\" value={row.item} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" id={`quantity${row.id}`} className={`form-control ${currMode}`} disabled={isDisabled} lineno={row.id} name=\"quantity\" value={row.quantity} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" id={`purchaseprice${row.id}`} className={`form-control ${currMode}`} disabled={isDisabled} lineno={row.id} name=\"purchaseprice\" value={row.purchaseprice} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" id={`discount${row.id}`} className={`form-control ${currMode}`} disabled={isDisabled} lineno={row.id} name=\"discount\" value={row.discount} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" id={`value${row.id}`} className={`form-control ${currMode}`} disabled=\"true\" lineno={row.id} name=\"value\" value={row.value} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" id={`tax${row.id}`} className={`form-control ${currMode}`} disabled={isDisabled} lineno={row.id} name=\"tax\" value={row.tax} onChange={setLineItem} /></td>\r\n                <td><input type=\"text\" className={`form-control ${currMode}`} disabled=\"true\" value={row.grossamount} /></td>\r\n                <td className={selectedRow === row.id ? \"\" : \"d-none\"} hidden={isDisabled}><button type=\"button\" className=\"btn btn-default\" onClick={() => removeRow(row.id)}><FontAwesomeIcon icon={faTimes} style={{ color: \"red\" }} /></button></td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Utils.js",["272","273","274"],"import React, { useHistory, useState } from 'react'\r\n\r\nexport async function logout() {\r\n\r\n    if (localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')).refreshToken) {\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"token\": JSON.parse(localStorage.getItem('token')).refreshToken })\r\n        };\r\n        try {\r\n            const response = await fetch('http://localhost:4444/logout', requestOptions);\r\n            const data = await response.json();\r\n            console.log('data4', data);\r\n        } catch (error) {\r\n            console.log('error', error.message);\r\n        }\r\n        localStorage.clear();\r\n        return true;\r\n    } else\r\n        return false;\r\n}\r\n\r\nexport async function updateToken() {\r\n    let refreshToken = localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')).refreshToken;\r\n\r\n    if (refreshToken) {\r\n        //get new token & update\r\n        try {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ token: refreshToken })\r\n            };\r\n\r\n            const response = await fetch('http://localhost:4444/token', requestOptions);\r\n            const data = await response.json();\r\n            console.log('data1', data);\r\n\r\n            if (data.code === 'OK') {\r\n                setToken(data.accessToken, refreshToken);\r\n                return true;\r\n            }\r\n        } catch (error) {\r\n            console.log('error', error.message);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function setToken(accessToken, refreshToken) {\r\n    localStorage.setItem('token', JSON.stringify({ accessToken: accessToken, refreshToken: refreshToken }));\r\n}\r\n\r\nexport async function login(user) {\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(user)\r\n        };\r\n\r\n        const response = await fetch('http://localhost:4444/login/', requestOptions);\r\n        const data = await response.json();\r\n        console.log('data2', data);\r\n\r\n        if (data.code === 'OK') {\r\n            setToken(data.accessToken, data.refreshToken);\r\n            return true;\r\n        }\r\n        alert(data.message);\r\n\r\n    } catch (error) {\r\n        console.log('error', error);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport async function getCurretUser() {\r\n    if (localStorage.getItem('token') && JSON.parse(localStorage.getItem('token')).accessToken) {\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('token')).accessToken,\r\n            },\r\n        };\r\n        const response = await fetch('http://localhost:5000/user/cu', requestOptions);\r\n        const dataObj = await response.json();\r\n\r\n        console.log('data3', dataObj);\r\n\r\n        if (dataObj.code !== 'OK') {\r\n            //Check and update refresh Token\r\n            if (!await updateToken())\r\n                return { code: 'ERROR', message: 'Refresh Token Expired, Login Again', user: null };\r\n            else\r\n                return await getCurretUser();\r\n        }\r\n        return { code: 'OK', message: 'Success', user: dataObj.user };\r\n    }\r\n    return { code: 'ERROR', message: 'Token Not Available in Local', user: null };\r\n}\r\n\r\nexport function getRecordDetails(recordType) {\r\n\r\n    //Get from db\r\n    const recordData = {\r\n        \"user\": {\r\n            pageType: \"Master Files\",\r\n            pageGroup: \"Admin\",\r\n            pageName: \"Users\",\r\n            recordType: \"user\",\r\n            pathName: \"/admin/user\"\r\n        },\r\n        \"po\": {\r\n            pageType: \"Transactions\",\r\n            pageGroup: \"Purchasing\",\r\n            pageName: \"Purchase Orders\",\r\n            recordType: \"po\",\r\n            pathName: \"/purchasing/po\"\r\n        }\r\n    }\r\n\r\n    return recordData[recordType];\r\n\r\n}\r\n\r\nexport function getSideList() {\r\n    return [{ \"val\": \"master\", \"text\": \"Master Files\", \"items\": [{ \"val\": \"admin\", \"text\": \"Admin\", \"icon\": \"cog\", \"items\": [{ \"val\": \"user\", \"text\": \"User Account\" }, { \"val\": \"role\", \"text\": \"User Roles\" }, { \"val\": \"currency\", \"text\": \"Currency\" }, { \"val\": \"prilvl\", \"text\": \"Price Level\" }, { \"val\": \"company\", \"text\": \"Company Profile\" }, { \"val\": \"location\", \"text\": \"Location\" }] }, { \"val\": \"stock\", \"text\": \"Stocks & Sales\", \"icon\": \"shopping-bag\", \"items\": [{ \"val\": \"group\", \"text\": \"Item Group\" }, { \"val\": \"type\", \"text\": \"Item Type\" }, { \"val\": \"unit\", \"text\": \"Unit of Measure\" }, { \"val\": \"reason\", \"text\": \"Reason\" }, { \"val\": \"item\", \"text\": \"Item\" }] }, { \"val\": \"debtor\", \"text\": \"Debtors\", \"icon\": \"users\", \"items\": [{ \"val\": \"salesrep\", \"text\": \"Sales Person\" }, { \"val\": \"cusgroup\", \"text\": \"Customer Group\" }, { \"val\": \"customer\", \"text\": \"Customer\" }] }, { \"val\": \"creditors\", \"text\": \"Creditors\", \"icon\": \"handshake\", \"items\": [{ \"val\": \"suppgroup\", \"text\": \"Supplier Group\" }, { \"val\": \"supplier\", \"text\": \"Supplier\" }] }] }, { \"val\": \"transaction\", \"text\": \"Transactions\", \"items\": [{ \"val\": \"purchasing\", \"text\": \"Purchasing\", \"icon\": \"cart-arrow-down\", \"items\": [{ \"val\": \"po\", \"text\": \"Purchase Order\" }, { \"val\": \"grn\", \"text\": \"Goods Received Note\" }, { \"val\": \"grrn\", \"text\": \"Goods Return Note\" }] }, { \"val\": \"inventory\", \"text\": \"Stock\", \"icon\": \"shopping-bag\", \"items\": [{ \"val\": \"transfer\", \"text\": \"Location Stock Transfer\" }, { \"val\": \"damage\", \"text\": \"Damage Stock Transfer\" }, { \"val\": \"issue\", \"text\": \"Issue Entry\" }, { \"val\": \"issuereturn\", \"text\": \"Issue Return\" }, { \"val\": \"addition\", \"text\": \"Adjustments Addition\" }, { \"val\": \"deduction\", \"text\": \"Adjustments Deductiion\" }] }, { \"val\": \"sales\", \"text\": \"Sales\", \"icon\": \"chart-line\", \"items\": [{ \"val\": \"quote\", \"text\": \"Quotation\" }, { \"val\": \"order\", \"text\": \"Sales Order\" }, { \"val\": \"invoice\", \"text\": \"Invoice\" }, { \"val\": \"cashsale\", \"text\": \"Cash Sale\" }, { \"val\": \"salesret\", \"text\": \"Sales Return With Invoice\" }, { \"val\": \"return\", \"text\": \"Sales Return W/O Invoice\" }] }, { \"val\": \"receivable\", \"text\": \"Accounts Receivable\", \"icon\": \"users\", \"items\": [{ \"val\": \"debdnote\", \"text\": \"Debit Note\" }, { \"val\": \"crddnote\", \"text\": \"Credit Note\" }, { \"val\": \"receipt\", \"text\": \"Receipt\" }] }, { \"val\": \"payable\", \"text\": \"Accounts Payable\", \"icon\": \"handshake\", \"items\": [{ \"val\": \"debcnote\", \"text\": \"Debit Note\" }, { \"val\": \"crdcnote\", \"text\": \"Credit Note\" }, { \"val\": \"serviceinv\", \"text\": \"Service Invoice\" }, { \"val\": \"payvoucher\", \"text\": \"Payment Voucher\" }] }] }, { \"val\": \"document\", \"text\": \"Documents\", \"items\": [{ \"val\": \"report\", \"text\": \"Reports\", \"icon\": \"file-invoice\", \"items\": [{ \"val\": \"rptpurchasing\", \"text\": \"Purchasing\" }, { \"val\": \"rptstock\", \"text\": \"Stocks\" }, { \"val\": \"rptsales\", \"text\": \"Sales\" }, { \"val\": \"rptreceivable\", \"text\": \"Accounts Receivable\" }, { \"val\": \"rptpayable\", \"text\": \"Accounts Payable\" }] }, { \"val\": \"audit\", \"text\": \"Audit Trails\", \"icon\": \"receipt\", \"items\": [{ \"val\": \"audpurchasing\", \"text\": \"Purchasing\" }, { \"val\": \"audstock\", \"text\": \"Stocks\" }, { \"val\": \"audsales\", \"text\": \"Sales\" }, { \"val\": \"audreceivable\", \"text\": \"Accounts Receivable\" }, { \"val\": \"audpayable\", \"text\": \"Accounts Payable\" }] }] }];\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\Header.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\AddSelect.js",["275","276"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function AddSelect({ options }) {\r\n\r\n    return (\r\n        options.map((option, idx) => (\r\n            <option key={idx} value={option.value}>{option.text}</option>\r\n        ))\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\ModalPopup.js",["277","278"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function ModalPopup({ modalShow, modalClose, confirmValue, modalHeading, modalContent }) {\r\n    return (\r\n        <>\r\n            <Modal show={modalShow} onHide={() => modalClose(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{modalHeading}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modalContent}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => { confirmValue(false); modalClose(false); }}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => { confirmValue(true); modalClose(false); }}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\MessageBox.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\APIs.js",[],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Reports\\Admin\\PrtUserManager.js",["279","280","281"],"import React, { useState, useEffect } from 'react'\r\nimport { APIs } from '../../Common/APIs';\r\n\r\nexport default class PrtUserManager extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <PrintContent recordid={this.props.recordid} />\r\n        )\r\n    }\r\n}\r\n\r\nfunction PrintContent({ recordid }) {\r\n\r\n    const [user, setUser] = useState([])\r\n    const [supervisor, setSupervisor] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [state, setState] = useState('')\r\n\r\n    const _getUser = async (userID) => {\r\n        if (userID) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.user.get}/${userID}`, requestOptions);\r\n            let response = await res.json();\r\n\r\n            console.log('response', response);\r\n            setUser(response);\r\n        }\r\n    }\r\n\r\n    const _getState = async (stateID) => {\r\n        if (stateID) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.list.state}/${stateID}`, requestOptions);\r\n            let response = await res.json();\r\n            if (response.code === 'ok') setState(response.data.text);\r\n        }\r\n    }\r\n\r\n    const _getSupervisor = async (recordid) => {\r\n        if (recordid) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.user.supervisor}/${recordid}`, requestOptions);\r\n            let response = await res.json();\r\n            if (response.code === 'ok') setSupervisor(response.data.text);\r\n        }\r\n    }\r\n\r\n    const _getRole = async (roleID) => {\r\n        if (roleID) {\r\n            let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n            };\r\n            let res = await fetch(`${APIs.user.role}/${roleID}`, requestOptions);\r\n            let response = await res.json();\r\n            if (response.code === 'ok') setRole(response.data.text);\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (recordid) await _getUser(recordid);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (user.supervisor) await _getSupervisor(user.supervisor);\r\n        if (user.userrole) await _getRole(user.userrole);\r\n        if (user.state) await _getState(user.state);\r\n    }, [user])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-4\">\r\n                <strong><h2>User Account</h2></strong>\r\n                <div className=\"text-muted\">User ID</div>\r\n                <strong>{user.userid}</strong>\r\n            </div>\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Username</div>\r\n                    <strong>{user.username}</strong>\r\n                </div>\r\n                <div className=\"col-md-6 text-md-right1\">\r\n                    <div className=\"text-muted\">Record ID</div>\r\n                    <strong>{user.recordid}</strong>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Name</div>\r\n                    <strong>{`${user.firstname} ${user.lastname}`}</strong>\r\n                </div>\r\n                <div className=\"col-md-6 text-md-right1\">\r\n                    <div className=\"text-muted\">Title</div>\r\n                    <strong>{user.jobtitle}</strong>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <hr className=\"my-4\" />\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Email</div>\r\n                    <strong>{user.email}</strong>\r\n                </div>\r\n                <div className=\"col-md-6 text-md-right1\">\r\n                    <div className=\"text-muted\">Supervisor</div>\r\n                    <strong>{supervisor}</strong>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Phone</div>\r\n                    <strong>{user.phone}</strong>\r\n                </div>\r\n                <div className=\"col-md-6 text-md-right1\">\r\n                    <div className=\"text-muted\">Mobile</div>\r\n                    <strong>{user.mobile}</strong>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Address</div>\r\n                    <strong>\r\n                        <p>\r\n                            {user.addr1} <br className={user.addr1 ? '' : 'd-none'} />\r\n                            {user.addr2}  <br className={user.addr2 ? '' : 'd-none'} />\r\n                            {user.city}<br className={user.city ? '' : 'd-none'} />\r\n                            {state} <br className={user.state ? '' : 'd-none'} />\r\n                            {user.zip}\r\n                        </p> </strong>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"text-muted\">Bio</div>\r\n                    <strong>{user.bio}</strong>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 text-md-right1\">\r\n                    <div className=\"text-muted\">User Role</div>\r\n                    <strong>{role}</strong>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}",["282","283"],"D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\LocationSelect.js",["284","285","286","287"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function LocationSelect({ className, disabled, id, name, value, onChange }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let response = await fetch(APIs.location.get, requestOptions);\r\n        let res = await response.json();\r\n        console.log('res', JSON.stringify(res));\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"Record ID\"], label: data[\"Name\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\CurrencySelect.js",["288","289","290","291","292","293"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function CurrencySelect({ className, disabled, id, name, value, onChange }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        // let response = await fetch(APIs.currency.get, requestOptions);\r\n        // let res = await response.json();\r\n        // console.log('res', JSON.stringify(res));\r\n\r\n        let res = {\r\n            code: 'ok',\r\n            data: [\r\n                { \"Record ID\": 1, \"Name\": \"LKR\", \"Description\": \"Sri Lankan Rupee\" },\r\n                { \"Record ID\": 2, \"Name\": \"INR\", \"Description\": \"Indian Rupee\" },\r\n                { \"Record ID\": 3, \"Name\": \"USD\", \"Description\": \"US Dollar\" },\r\n                { \"Record ID\": 4, \"Name\": \"GBP\", \"Description\": \"Pound Sterling\" },\r\n                { \"Record ID\": 5, \"Name\": \"EUR\", \"Description\": \"Euro\" },\r\n                { \"Record ID\": 6, \"Name\": \"JPY\", \"Description\": \"Japanese Yen\" },\r\n                { \"Record ID\": 7, \"Name\": \"CNY\", \"Description\": \"Chinese Yuan Renminbi\" },\r\n                { \"Record ID\": 8, \"Name\": \"LKR\", \"Description\": \"Sri Lankan Rupee\" }\r\n            ]\r\n        }\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"Record ID\"], label: data[\"Name\"] + ' - ' + data[\"Description\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\POTypeSelect.js",["294","295","296","297","298","299"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function POTypeSelect({ className, disabled, id, name, value, onChange }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        // let response = await fetch(APIs.currency.get, requestOptions);\r\n        // let res = await response.json();\r\n        // console.log('res', JSON.stringify(res));\r\n\r\n        let res = {\r\n            code: 'ok',\r\n            data: [\r\n                { \"Record ID\": 1, \"Name\": \"Local\" },\r\n                { \"Record ID\": 2, \"Name\": \"Sea\" },\r\n                { \"Record ID\": 3, \"Name\": \"Air\" }\r\n            ]\r\n        }\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"Record ID\"], label: data[\"Name\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\ItemSelect.js",["300","301","302","303","304","305"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function ItemSelect({ className, disabled, id, name, value, onChange, lineno }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        // let response = await fetch(APIs.currency.get, requestOptions);\r\n        // let res = await response.json();\r\n        // console.log('res', JSON.stringify(res));\r\n\r\n        let res = {\r\n            code: 'ok',\r\n            data: [\r\n                { \"Record ID\": \"1\", Name: \"Item 1\" },\r\n                { \"Record ID\": \"2\", Name: \"Item 2\" },\r\n                { \"Record ID\": \"3\", Name: \"Item 3\" },\r\n                { \"Record ID\": \"4\", Name: \"Item 4\" }\r\n            ]\r\n        }\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"Record ID\"], label: data[\"Name\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name, id: id } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} lineno={lineno} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\StateSelect.js",["306","307","308","309"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function StateSelect({ className, disabled, id, name, value, onChange }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        let response = await fetch(APIs.list.state, requestOptions);\r\n        let res = await response.json();\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"value\"], label: data[\"text\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\DateSelect.js",["310"],"import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default function DateSelect({ className, disabled, id, name, selected, onChange }) {\r\n\r\n    const handleChange = (date) => {\r\n        onChange({\r\n            target: {\r\n                value: date? date.toISOString().substring(0, 10): (null),\r\n                name: name,\r\n                id: id\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DatePicker dateFormat=\"yyyy-MM-dd\" className={className} disabled={disabled} id={id} name={name} selected={selected} onChange={handleChange} />\r\n        </>\r\n    )\r\n}\r\n","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\SelectOptions\\SupplierSelect.js",["311","312","313","314","315","316"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomSelect from 'react-select';\r\nimport { APIs } from '../Common/APIs';\r\n\r\nexport default function SupplierSelect({ className, disabled, id, name, value, onChange }) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [currValue, setCurrValue] = useState('')\r\n    const [vClass, setVClass] = useState('d-none')\r\n    const [cVisible, setCVisible] = useState('')\r\n\r\n    const txtsearch = useRef(null);\r\n\r\n    const getOptions = async () => {\r\n\r\n        let authToken = JSON.parse(localStorage.getItem('token')).accessToken;\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}` }\r\n        };\r\n        // let response = await fetch(APIs.supplier.get, requestOptions);\r\n        // let res = await response.json();\r\n        // console.log('res', JSON.stringify(res));\r\n\r\n        let res = {\r\n            code: 'ok',\r\n            data: [\r\n                { \"Record ID\": 1, \"Name\": \"Sachie Leonard\" },\r\n                { \"Record ID\": 2, \"Name\": \"Leda Jakov\" },\r\n                { \"Record ID\": 3, \"Name\": \"Mukhamed Markos\" },\r\n                { \"Record ID\": 4, \"Name\": \"Inka Kisecawchuck\" },\r\n                { \"Record ID\": 5, \"Name\": \"Marie Archie\" },\r\n                { \"Record ID\": 6, \"Name\": \"Albin Portia\" },\r\n                { \"Record ID\": 7, \"Name\": \"Josceline Jason\" },\r\n                { \"Record ID\": 8, \"Name\": \"Gopinath Anant\" }\r\n            ]\r\n        }\r\n\r\n        let opt = [{ value: '', label: 'Choose...' }]\r\n        if (res.code == 'ok') {\r\n            res.data.map((data) => {\r\n                opt.push({ value: data[\"Record ID\"], label: data[\"Name\"] });\r\n            })\r\n        }\r\n        setOptions(opt)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOptions()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let arrCurr = options.filter((e) => e.value == value)\r\n        if (arrCurr.length) setCurrValue(arrCurr[0])\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setVClass('')\r\n        setCVisible('d-none')\r\n    }\r\n    const handleBlur = () => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        onChange({ target: { value: e.value, name: name } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        txtsearch.current.focus();\r\n    }, [vClass])\r\n\r\n    useEffect(() => {\r\n        setVClass('d-none');\r\n        setCVisible('')\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={currValue.label} disabled={disabled} className={className + ' ' + cVisible} onFocus={handleClick} />\r\n            <CustomSelect ref={txtsearch} id={id} name={name} disabled={disabled} value={currValue} className={vClass} options={options} onBlur={handleBlur} onChange={handleChange} />\r\n        </>\r\n    )\r\n}","D:\\Projects\\Mavis\\MavisWeb\\mavis\\src\\Components\\Common\\GetReference.js",["317"],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":1,"column":50,"nodeType":"324","messageId":"325","endLine":1,"endColumn":58},{"ruleId":"322","severity":1,"message":"326","line":1,"column":27,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"322","severity":1,"message":"327","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":14},{"ruleId":"328","severity":1,"message":"329","line":20,"column":13,"nodeType":"330","endLine":20,"endColumn":55},{"ruleId":"328","severity":1,"message":"331","line":31,"column":25,"nodeType":"330","endLine":31,"endColumn":137},{"ruleId":"328","severity":1,"message":"331","line":41,"column":33,"nodeType":"330","endLine":41,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":53,"column":33,"nodeType":"330","endLine":53,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":65,"column":33,"nodeType":"330","endLine":65,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":77,"column":33,"nodeType":"330","endLine":77,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":91,"column":33,"nodeType":"330","endLine":91,"endColumn":68},{"ruleId":"328","severity":1,"message":"331","line":96,"column":25,"nodeType":"330","endLine":96,"endColumn":135},{"ruleId":"328","severity":1,"message":"331","line":105,"column":33,"nodeType":"330","endLine":105,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":117,"column":33,"nodeType":"330","endLine":117,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":129,"column":33,"nodeType":"330","endLine":129,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":140,"column":33,"nodeType":"330","endLine":140,"endColumn":73},{"ruleId":"328","severity":1,"message":"331","line":154,"column":33,"nodeType":"330","endLine":154,"endColumn":68},{"ruleId":"328","severity":1,"message":"331","line":159,"column":25,"nodeType":"330","endLine":159,"endColumn":133},{"ruleId":"328","severity":1,"message":"331","line":163,"column":29,"nodeType":"330","endLine":163,"endColumn":67},{"ruleId":"328","severity":1,"message":"331","line":164,"column":29,"nodeType":"330","endLine":164,"endColumn":67},{"ruleId":"328","severity":1,"message":"331","line":165,"column":29,"nodeType":"330","endLine":165,"endColumn":67},{"ruleId":"328","severity":1,"message":"331","line":166,"column":29,"nodeType":"330","endLine":166,"endColumn":67},{"ruleId":"328","severity":1,"message":"329","line":168,"column":29,"nodeType":"330","endLine":168,"endColumn":76},{"ruleId":"332","severity":1,"message":"333","line":15,"column":41,"nodeType":"334","messageId":"335","endLine":15,"endColumn":43},{"ruleId":"336","severity":1,"message":"337","line":26,"column":34,"nodeType":"338","messageId":"339","endLine":26,"endColumn":36},{"ruleId":"336","severity":1,"message":"337","line":26,"column":68,"nodeType":"338","messageId":"339","endLine":26,"endColumn":70},{"ruleId":"340","severity":1,"message":"341","line":30,"column":8,"nodeType":"342","endLine":30,"endColumn":10,"suggestions":"343"},{"ruleId":"332","severity":1,"message":"333","line":69,"column":55,"nodeType":"334","messageId":"335","endLine":69,"endColumn":57},{"ruleId":"332","severity":1,"message":"333","line":73,"column":104,"nodeType":"334","messageId":"335","endLine":73,"endColumn":106},{"ruleId":"332","severity":1,"message":"333","line":86,"column":46,"nodeType":"334","messageId":"335","endLine":86,"endColumn":48},{"ruleId":"328","severity":1,"message":"331","line":11,"column":33,"nodeType":"330","endLine":11,"endColumn":68},{"ruleId":"328","severity":1,"message":"331","line":14,"column":33,"nodeType":"330","endLine":14,"endColumn":68},{"ruleId":"328","severity":1,"message":"331","line":17,"column":33,"nodeType":"330","endLine":17,"endColumn":68},{"ruleId":"328","severity":1,"message":"331","line":20,"column":33,"nodeType":"330","endLine":20,"endColumn":68},{"ruleId":"322","severity":1,"message":"327","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":14},{"ruleId":"322","severity":1,"message":"326","line":1,"column":25,"nodeType":"324","messageId":"325","endLine":1,"endColumn":34},{"ruleId":"322","severity":1,"message":"344","line":1,"column":36,"nodeType":"324","messageId":"325","endLine":1,"endColumn":44},{"ruleId":"328","severity":1,"message":"329","line":32,"column":41,"nodeType":"330","endLine":32,"endColumn":94},{"ruleId":"322","severity":1,"message":"345","line":18,"column":11,"nodeType":"324","messageId":"325","endLine":18,"endColumn":18},{"ruleId":"340","severity":1,"message":"346","line":46,"column":15,"nodeType":"347","endLine":49,"endColumn":6},{"ruleId":"340","severity":1,"message":"348","line":49,"column":8,"nodeType":"342","endLine":49,"endColumn":10,"suggestions":"349"},{"ruleId":"340","severity":1,"message":"350","line":88,"column":10,"nodeType":"351","endLine":88,"endColumn":32},{"ruleId":"322","severity":1,"message":"352","line":2,"column":8,"nodeType":"324","messageId":"325","endLine":2,"endColumn":14},{"ruleId":"322","severity":1,"message":"353","line":7,"column":11,"nodeType":"324","messageId":"325","endLine":7,"endColumn":19},{"ruleId":"322","severity":1,"message":"354","line":37,"column":12,"nodeType":"324","messageId":"325","endLine":37,"endColumn":18},{"ruleId":"322","severity":1,"message":"355","line":44,"column":12,"nodeType":"324","messageId":"325","endLine":44,"endColumn":20},{"ruleId":"322","severity":1,"message":"356","line":44,"column":22,"nodeType":"324","messageId":"325","endLine":44,"endColumn":33},{"ruleId":"322","severity":1,"message":"357","line":119,"column":11,"nodeType":"324","messageId":"325","endLine":119,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":137,"column":21,"nodeType":"330","endLine":137,"endColumn":62},{"ruleId":"358","severity":1,"message":"359","line":149,"column":21,"nodeType":"330","endLine":149,"endColumn":62},{"ruleId":"358","severity":1,"message":"359","line":159,"column":21,"nodeType":"330","endLine":159,"endColumn":62},{"ruleId":"332","severity":1,"message":"333","line":170,"column":31,"nodeType":"334","messageId":"335","endLine":170,"endColumn":33},{"ruleId":"332","severity":1,"message":"333","line":172,"column":36,"nodeType":"334","messageId":"335","endLine":172,"endColumn":38},{"ruleId":"340","severity":1,"message":"360","line":180,"column":8,"nodeType":"342","endLine":180,"endColumn":44,"suggestions":"361"},{"ruleId":"340","severity":1,"message":"362","line":190,"column":8,"nodeType":"342","endLine":190,"endColumn":22,"suggestions":"363"},{"ruleId":"340","severity":1,"message":"364","line":194,"column":8,"nodeType":"342","endLine":194,"endColumn":15,"suggestions":"365"},{"ruleId":"332","severity":1,"message":"333","line":212,"column":22,"nodeType":"334","messageId":"335","endLine":212,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":226,"column":22,"nodeType":"334","messageId":"335","endLine":226,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":242,"column":22,"nodeType":"334","messageId":"335","endLine":242,"endColumn":24},{"ruleId":"340","severity":1,"message":"366","line":249,"column":8,"nodeType":"342","endLine":249,"endColumn":10,"suggestions":"367"},{"ruleId":"322","severity":1,"message":"368","line":258,"column":13,"nodeType":"324","messageId":"325","endLine":258,"endColumn":20},{"ruleId":"322","severity":1,"message":"369","line":336,"column":26,"nodeType":"324","messageId":"325","endLine":336,"endColumn":30},{"ruleId":"328","severity":1,"message":"329","line":419,"column":49,"nodeType":"330","endLine":419,"endColumn":123},{"ruleId":"328","severity":1,"message":"329","line":420,"column":49,"nodeType":"330","endLine":420,"endColumn":123},{"ruleId":"328","severity":1,"message":"331","line":425,"column":49,"nodeType":"330","endLine":425,"endColumn":106},{"ruleId":"328","severity":1,"message":"331","line":429,"column":53,"nodeType":"330","endLine":429,"endColumn":91},{"ruleId":"328","severity":1,"message":"331","line":430,"column":53,"nodeType":"330","endLine":430,"endColumn":91},{"ruleId":"328","severity":1,"message":"331","line":431,"column":53,"nodeType":"330","endLine":431,"endColumn":91},{"ruleId":"328","severity":1,"message":"331","line":469,"column":49,"nodeType":"330","endLine":469,"endColumn":78},{"ruleId":"328","severity":1,"message":"331","line":473,"column":53,"nodeType":"330","endLine":473,"endColumn":110},{"ruleId":"328","severity":1,"message":"331","line":477,"column":57,"nodeType":"330","endLine":477,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":478,"column":57,"nodeType":"330","endLine":478,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":479,"column":57,"nodeType":"330","endLine":479,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":524,"column":49,"nodeType":"330","endLine":524,"endColumn":78},{"ruleId":"328","severity":1,"message":"331","line":528,"column":53,"nodeType":"330","endLine":528,"endColumn":110},{"ruleId":"328","severity":1,"message":"331","line":532,"column":57,"nodeType":"330","endLine":532,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":533,"column":57,"nodeType":"330","endLine":533,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":534,"column":57,"nodeType":"330","endLine":534,"endColumn":95},{"ruleId":"370","severity":1,"message":"371","line":544,"column":142,"nodeType":"372","endLine":544,"endColumn":154},{"ruleId":"328","severity":1,"message":"331","line":594,"column":49,"nodeType":"330","endLine":594,"endColumn":78},{"ruleId":"328","severity":1,"message":"331","line":598,"column":53,"nodeType":"330","endLine":598,"endColumn":110},{"ruleId":"328","severity":1,"message":"331","line":602,"column":57,"nodeType":"330","endLine":602,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":603,"column":57,"nodeType":"330","endLine":603,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":604,"column":57,"nodeType":"330","endLine":604,"endColumn":95},{"ruleId":"322","severity":1,"message":"373","line":7,"column":37,"nodeType":"324","messageId":"325","endLine":7,"endColumn":45},{"ruleId":"322","severity":1,"message":"374","line":7,"column":65,"nodeType":"324","messageId":"325","endLine":7,"endColumn":73},{"ruleId":"322","severity":1,"message":"375","line":7,"column":92,"nodeType":"324","messageId":"325","endLine":7,"endColumn":104},{"ruleId":"322","severity":1,"message":"376","line":8,"column":8,"nodeType":"324","messageId":"325","endLine":8,"endColumn":17},{"ruleId":"322","severity":1,"message":"354","line":43,"column":12,"nodeType":"324","messageId":"325","endLine":43,"endColumn":18},{"ruleId":"322","severity":1,"message":"355","line":52,"column":12,"nodeType":"324","messageId":"325","endLine":52,"endColumn":20},{"ruleId":"322","severity":1,"message":"356","line":52,"column":22,"nodeType":"324","messageId":"325","endLine":52,"endColumn":33},{"ruleId":"332","severity":1,"message":"333","line":57,"column":19,"nodeType":"334","messageId":"335","endLine":57,"endColumn":21},{"ruleId":"332","severity":1,"message":"333","line":57,"column":37,"nodeType":"334","messageId":"335","endLine":57,"endColumn":39},{"ruleId":"340","severity":1,"message":"377","line":146,"column":8,"nodeType":"342","endLine":146,"endColumn":15,"suggestions":"378"},{"ruleId":"332","severity":1,"message":"333","line":195,"column":31,"nodeType":"334","messageId":"335","endLine":195,"endColumn":33},{"ruleId":"322","severity":1,"message":"357","line":257,"column":11,"nodeType":"324","messageId":"325","endLine":257,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":275,"column":21,"nodeType":"330","endLine":275,"endColumn":62},{"ruleId":"358","severity":1,"message":"359","line":286,"column":21,"nodeType":"330","endLine":286,"endColumn":62},{"ruleId":"358","severity":1,"message":"359","line":296,"column":21,"nodeType":"330","endLine":296,"endColumn":62},{"ruleId":"332","severity":1,"message":"333","line":307,"column":31,"nodeType":"334","messageId":"335","endLine":307,"endColumn":33},{"ruleId":"332","severity":1,"message":"333","line":309,"column":36,"nodeType":"334","messageId":"335","endLine":309,"endColumn":38},{"ruleId":"340","severity":1,"message":"379","line":317,"column":8,"nodeType":"342","endLine":317,"endColumn":44,"suggestions":"380"},{"ruleId":"340","severity":1,"message":"362","line":327,"column":8,"nodeType":"342","endLine":327,"endColumn":22,"suggestions":"381"},{"ruleId":"340","severity":1,"message":"364","line":331,"column":8,"nodeType":"342","endLine":331,"endColumn":15,"suggestions":"382"},{"ruleId":"332","severity":1,"message":"333","line":349,"column":22,"nodeType":"334","messageId":"335","endLine":349,"endColumn":24},{"ruleId":"322","severity":1,"message":"368","line":362,"column":13,"nodeType":"324","messageId":"325","endLine":362,"endColumn":20},{"ruleId":"322","severity":1,"message":"369","line":448,"column":26,"nodeType":"324","messageId":"325","endLine":448,"endColumn":30},{"ruleId":"328","severity":1,"message":"329","line":539,"column":53,"nodeType":"330","endLine":539,"endColumn":127},{"ruleId":"328","severity":1,"message":"329","line":540,"column":53,"nodeType":"330","endLine":540,"endColumn":127},{"ruleId":"328","severity":1,"message":"331","line":544,"column":53,"nodeType":"330","endLine":544,"endColumn":110},{"ruleId":"328","severity":1,"message":"331","line":548,"column":57,"nodeType":"330","endLine":548,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":549,"column":57,"nodeType":"330","endLine":549,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":550,"column":57,"nodeType":"330","endLine":550,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":631,"column":49,"nodeType":"330","endLine":631,"endColumn":78},{"ruleId":"328","severity":1,"message":"331","line":635,"column":53,"nodeType":"330","endLine":635,"endColumn":110},{"ruleId":"328","severity":1,"message":"331","line":639,"column":57,"nodeType":"330","endLine":639,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":640,"column":57,"nodeType":"330","endLine":640,"endColumn":95},{"ruleId":"328","severity":1,"message":"331","line":641,"column":57,"nodeType":"330","endLine":641,"endColumn":95},{"ruleId":"332","severity":1,"message":"333","line":723,"column":77,"nodeType":"334","messageId":"335","endLine":723,"endColumn":79},{"ruleId":"322","severity":1,"message":"383","line":770,"column":12,"nodeType":"324","messageId":"325","endLine":770,"endColumn":17},{"ruleId":"322","severity":1,"message":"384","line":1,"column":8,"nodeType":"324","messageId":"325","endLine":1,"endColumn":13},{"ruleId":"322","severity":1,"message":"385","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":27},{"ruleId":"322","severity":1,"message":"344","line":1,"column":29,"nodeType":"324","messageId":"325","endLine":1,"endColumn":37},{"ruleId":"322","severity":1,"message":"344","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"326","line":1,"column":27,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"322","severity":1,"message":"344","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"326","line":1,"column":27,"nodeType":"324","messageId":"325","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"346","line":73,"column":15,"nodeType":"347","endLine":75,"endColumn":6},{"ruleId":"340","severity":1,"message":"386","line":75,"column":8,"nodeType":"342","endLine":75,"endColumn":10,"suggestions":"387"},{"ruleId":"340","severity":1,"message":"346","line":77,"column":15,"nodeType":"347","endLine":81,"endColumn":6},{"ruleId":"318","replacedBy":"388"},{"ruleId":"320","replacedBy":"389"},{"ruleId":"332","severity":1,"message":"333","line":26,"column":22,"nodeType":"334","messageId":"335","endLine":26,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":27,"column":33,"nodeType":"347","messageId":"392","endLine":27,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":39,"column":5,"nodeType":"324","endLine":39,"endColumn":14,"suggestions":"394"},{"ruleId":"332","severity":1,"message":"333","line":40,"column":53,"nodeType":"334","messageId":"335","endLine":40,"endColumn":55},{"ruleId":"322","severity":1,"message":"395","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":14},{"ruleId":"322","severity":1,"message":"396","line":17,"column":15,"nodeType":"324","messageId":"325","endLine":17,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":40,"column":22,"nodeType":"334","messageId":"335","endLine":40,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":41,"column":33,"nodeType":"347","messageId":"392","endLine":41,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":53,"column":5,"nodeType":"324","endLine":53,"endColumn":14,"suggestions":"397"},{"ruleId":"332","severity":1,"message":"333","line":54,"column":53,"nodeType":"334","messageId":"335","endLine":54,"endColumn":55},{"ruleId":"322","severity":1,"message":"395","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":14},{"ruleId":"322","severity":1,"message":"396","line":17,"column":15,"nodeType":"324","messageId":"325","endLine":17,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":35,"column":22,"nodeType":"334","messageId":"335","endLine":35,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":36,"column":33,"nodeType":"347","messageId":"392","endLine":36,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":48,"column":5,"nodeType":"324","endLine":48,"endColumn":14,"suggestions":"398"},{"ruleId":"332","severity":1,"message":"333","line":49,"column":53,"nodeType":"334","messageId":"335","endLine":49,"endColumn":55},{"ruleId":"322","severity":1,"message":"395","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":14},{"ruleId":"322","severity":1,"message":"396","line":17,"column":15,"nodeType":"324","messageId":"325","endLine":17,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":36,"column":22,"nodeType":"334","messageId":"335","endLine":36,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":37,"column":33,"nodeType":"347","messageId":"392","endLine":37,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":49,"column":5,"nodeType":"324","endLine":49,"endColumn":14,"suggestions":"399"},{"ruleId":"332","severity":1,"message":"333","line":50,"column":53,"nodeType":"334","messageId":"335","endLine":50,"endColumn":55},{"ruleId":"332","severity":1,"message":"333","line":25,"column":22,"nodeType":"334","messageId":"335","endLine":25,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":26,"column":33,"nodeType":"347","messageId":"392","endLine":26,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":38,"column":5,"nodeType":"324","endLine":38,"endColumn":14,"suggestions":"400"},{"ruleId":"332","severity":1,"message":"333","line":39,"column":53,"nodeType":"334","messageId":"335","endLine":39,"endColumn":55},{"ruleId":"322","severity":1,"message":"344","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"395","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":14},{"ruleId":"322","severity":1,"message":"396","line":17,"column":15,"nodeType":"324","messageId":"325","endLine":17,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":40,"column":22,"nodeType":"334","messageId":"335","endLine":40,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":41,"column":33,"nodeType":"347","messageId":"392","endLine":41,"endColumn":35},{"ruleId":"340","severity":1,"message":"393","line":53,"column":5,"nodeType":"324","endLine":53,"endColumn":14,"suggestions":"401"},{"ruleId":"332","severity":1,"message":"333","line":54,"column":53,"nodeType":"334","messageId":"335","endLine":54,"endColumn":55},{"ruleId":"322","severity":1,"message":"402","line":18,"column":11,"nodeType":"324","messageId":"325","endLine":18,"endColumn":23},"no-native-reassign",["403"],"no-negated-in-lhs",["404"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["405"],"'useState' is defined but never used.","'history' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: '_getRecordData'. Either include it or remove the dependency array.",["406"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'Header' is defined but never used.","'currPage' is assigned a value but never used.","'states' is assigned a value but never used.","'recordID' is assigned a value but never used.","'setrecordID' is assigned a value but never used.","'dataPrint' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["407"],"React Hook useEffect has missing dependencies: 'cMode' and 'deleteRecord'. Either include them or remove the dependency array.",["408"],"React Hook useEffect has a missing dependency: '_setObjects'. Either include it or remove the dependency array.",["409"],"React Hook useEffect has a missing dependency: '_getSupervisors'. Either include it or remove the dependency array.",["410"],"'isSaved' is assigned a value but never used.","'body' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'faSearch' is defined but never used.","'faUpload' is defined but never used.","'faCalculator' is defined but never used.","'AddSelect' is defined but never used.","React Hook useEffect has a missing dependency: '_calc'. Either include it or remove the dependency array.",["411"],"React Hook useEffect has a missing dependency: 'getPO'. Either include it or remove the dependency array.",["412"],["413"],["414"],"'items' is assigned a value but never used.","'React' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'recordid'. Either include it or remove the dependency array.",["415"],["403"],["404"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect contains a call to 'setCurrValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [options, value] as a second argument to the useEffect Hook.",["416"],"'APIs' is defined but never used.","'requestOptions' is assigned a value but never used.",["417"],["418"],["419"],["420"],["421"],"'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"428","fix":"438"},{"desc":"430","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"442","fix":"444"},{"desc":"442","fix":"445"},{"desc":"442","fix":"446"},{"desc":"442","fix":"447"},{"desc":"442","fix":"448"},"Update the dependencies array to be: [history.location.pathname]",{"range":"449","text":"450"},"Update the dependencies array to be: [_getRecordData]",{"range":"451","text":"452"},"Update the dependencies array to be: [getUser, match.params.id, match.params.mode]",{"range":"453","text":"454"},"Update the dependencies array to be: [cMode, confirmValue, deleteRecord]",{"range":"455","text":"456"},"Update the dependencies array to be: [_setObjects, cMode]",{"range":"457","text":"458"},"Update the dependencies array to be: [_getSupervisors]",{"range":"459","text":"460"},"Update the dependencies array to be: [_calc, count]",{"range":"461","text":"462"},"Update the dependencies array to be: [getPO, match.params.id, match.params.mode]",{"range":"463","text":"464"},{"range":"465","text":"456"},{"range":"466","text":"458"},"Update the dependencies array to be: [recordid]",{"range":"467","text":"468"},"Add dependencies array: [options, value]",{"range":"469","text":"470"},{"range":"471","text":"470"},{"range":"472","text":"470"},{"range":"473","text":"470"},{"range":"474","text":"470"},{"range":"475","text":"470"},[1184,1186],"[history.location.pathname]",[1614,1616],"[_getRecordData]",[7720,7756],"[getUser, match.params.id, match.params.mode]",[7981,7995],"[cMode, confirmValue, deleteRecord]",[8055,8062],"[_setObjects, cMode]",[9751,9753],"[_getSupervisors]",[5856,5863],"[_calc, count]",[12391,12427],"[getPO, match.params.id, match.params.mode]",[12652,12666],[12726,12733],[2869,2871],"[recordid]",[1417,1417],", [options, value]",[2222,2222],[1676,1676],[1744,1744],[1358,1358],[2021,2021]]